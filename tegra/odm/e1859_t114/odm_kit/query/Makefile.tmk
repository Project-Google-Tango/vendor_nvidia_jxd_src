################################### tell Emacs this is a -*- makefile-gmake -*-
#
# Copyright (c) 2013, NVIDIA CORPORATION.  All rights reserved.
#
# NVIDIA CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA CORPORATION is strictly prohibited.
#
# tmake for SW Mobile component makefile
#
# nvodm_query static library component makefile (kai)
#
###############################################################################

ifdef NV_COMPONENT_FLAG_STATIC_LIBRARY_SECTION
include $(NV_BUILD_START_COMPONENT)

NV_COMPONENT_NAME              := libnvodm_query
NV_COMPONENT_OWN_INTERFACE_DIR := .
NV_COMPONENT_INCLUDES          := \
        $(NV_SOURCE)/hwinc/$(NV_TARGET_SOC_FAMILY) \
        ../../../../../core/drivers/nvpinmux \
        ../../../template/odm_kit/adaptations \
	../../../template/odm_kit/query/include

NV_COMPONENT_CFLAGS += -DSET_KERNEL_PINMUX
ifeq ($(NV_BUILD_CONFIGURATION_IS_MICROBOOT),1)
NV_COMPONENT_CFLAGS += -DAVP_PINMUX=1
else
NV_COMPONENT_CFLAGS += -DAVP_PINMUX=0
endif
NV_PINMUX_FILE := nvodm_pinmux_init.c
ifeq ($(NV_BUILD_CONFIGURATION_IS_AOS),1)
NV_COMPONENT_CFLAGS += -DDEFAULT_CONSOLE
endif

NV_COMPONENT_NEEDED_STATIC_INTERFACE_DIRS := \
	$(NV_SOURCE)/core/drivers/nvpinmux

NV_COMPONENT_SOURCES           := \
	nvodm_query.c \
	nvodm_query_discovery.c \
	nvodm_query_nand.c \
	nvodm_query_gpio.c \
	nvodm_query_pinmux.c \
	$(NV_PINMUX_FILE) \
	nvodm_query_kbc.c \
	nvodm_platform_init.c \
	secure/nvodm_query_secure.c
NV_COMPONENT_CFLAGS            += \
	-DLPM_BATTERY_CHARGING=1

#
# NOTE: The code from these modules is also executed on the AVP!
#       Therefore they need to be compiled with code generation flags
#       compatible with AVP, i.e. ARMv4T ARM code.
#
NV_COMPONENT_CODE_GENERATION   := avp

NV_COMPONENT_HAS_BROKEN_CODE   := missing-field-initializers

ifeq ($(NV_BUILD_CONFIGURATION_IS_ANDROID),1)
# reuse the existing convention to detect Secure OS builds
# @TODO: this might need to change in the future
ifeq ($(NV_BUILD_CONFIGURATION_IS_SECURE_OS),y)
NV_COMPONENT_CFLAGS            += \
	-DCONFIG_TRUSTED_FOUNDATIONS
endif
endif

include $(NV_BUILD_STATIC_LIBRARY)
endif

# Local Variables:
# indent-tabs-mode: t
# tab-width: 8
# End:
# vi: set tabstop=8 noexpandtab:
