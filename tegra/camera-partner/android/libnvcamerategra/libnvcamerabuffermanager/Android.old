ifneq ($(BOARD_VENDOR_USE_NV_CAMERA), false)
TEGRA_CAMERA_TYPE := openmax

LOCAL_PATH := $(call my-dir)
include $(NVIDIA_DEFAULTS)

LOCAL_MODULE := libnvcamerabuffers
LOCAL_MODULE_CLASS := STATIC_LIBRARIES


ifeq ($(BOARD_CAMERA_PREVIEW_HDMI_ONLY), true)
  ifneq ($(BOARD_HAVE_VID_ROUTING_TO_HDMI), true)
    $(error BOARD_HAVE_VID_ROUTING_TO_HDMI must be set to true in order for \
            BOARD_CAMERA_PREVIEW_HDMI_ONLY to take effect)
  endif
  LOCAL_CFLAGS += -DNV_GRALLOC_USAGE_FLAGS_CAMERA=GRALLOC_USAGE_EXTERNAL_DISP
endif

# We really want to get things clean enough that we can check
# this in with -Werror on.
LOCAL_CFLAGS += -Werror


LOCAL_SRC_FILES :=
LOCAL_SRC_FILES += nvbuffer_hw_allocator_tegra.cpp
LOCAL_SRC_FILES += nvbuffer_manager.cpp
LOCAL_SRC_FILES += nvbuffer_stream.cpp
LOCAL_SRC_FILES += nvbuffer_stream_factory.cpp

LOCAL_SHARED_LIBRARIES := \
	libcutils \
	libutils \
	libmedia \
	libui \
	libandroid_runtime \
	libbinder \
	libnvomxilclient \
	libnvos \
	libjpeg \
	libnvmm_utils \
	libnvddk_2d_v2 \
	libnvrm \
	libhardware_legacy \
	libcamera_client   \
	libnvcamerahdr \
	libnvtvmr



LOCAL_C_INCLUDES += $(TEGRA_TOP)/core/include
LOCAL_C_INCLUDES += $(TOP)/frameworks/base/include
LOCAL_C_INCLUDES += $(TEGRA_TOP)/multimedia-partner/openmax/include/openmax/il
LOCAL_C_INCLUDES += $(TEGRA_TOP)/multimedia-partner/openmax/include/openmax/ilclient
LOCAL_C_INCLUDES += $(TEGRA_TOP)/core/include/openmax/il
LOCAL_C_INCLUDES += $(TEGRA_TOP)/core/include/openmax/ilclient
LOCAL_C_INCLUDES += $(TEGRA_TOP)/graphics/2d/include
LOCAL_C_INCLUDES += $(TEGRA_TOP)/../../../external/jpeg

include $(NVIDIA_STATIC_LIBRARY)

endif

