################################### tell Emacs this is a -*- makefile-gmake -*-
#
# Copyright (c) 2013 NVIDIA CORPORATION.  All Rights Reserved.
#
# NVIDIA CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA CORPORATION is strictly prohibited.
#
# tmake for SW Mobile component makefile
#
# nvgetdtb_miniloader: static target executable
#
###############################################################################

ifdef NV_COMPONENT_FLAG_STATIC_EXECUTABLE_SECTION
include $(NV_BUILD_START_COMPONENT)

NV_COMPONENT_NAME     := nvgetdtb_miniloader
NV_COMPONENT_MAP_FILE := $(NV_COMPONENT_NAME).map
# SOC specific parts
NV_COMPONENT_SOURCES  += \
	nvgetdtb_server.c \
	nvgetdtb_platform.c

NV_COMPONENT_NEEDED_STATIC_INTERFACE_DIRS += \
	$(NV_SOURCE)/core/system/nv3p/$(NV_TARGET_SOC_FAMILY) \
	$(NV_SOURCE)/core/drivers/nvpinmux \
	$(NV_SOURCE)/core/drivers/nvodm/services \
	$(NV_SOURCE)/core/utils/nvos/aos/avp \
	$(NV_SOURCE)/core/drivers/nvddk/i2c

ifneq ($(NV_TARGET_ARCH),rvds_armv4)
NV_COMPONENT_NEEDED_STATIC_INTERFACE_DIRS += \
	$(NV_SOURCE)/core/utils/nvos/aos/libgcc
endif

NV_COMPONENT_INCLUDES := \
	$(NV_SOURCE)/core/utils/nvos/aos/nvap \
	$(NV_SOURCE)/hwinc \
	$(NV_SOURCE)/hwinc/$(NV_TARGET_SOC_FAMILY) \
	$(NV_SOURCE)/microboot/hwinc

NV_COMPONENT_CFLAGS   += \
	-DNV_IS_AVP=1 \
	-DNV_IS_AOS=1 \
	-DNVML_BYPASS_PRINT=1 \
	-DNVBOOT_SI_ONLY=1 \
	-DNVBOOT_TARGET_FPGA=0 \
	-DNVBOOT_TARGET_RTL=0 \
	-DNVODM_BOARD_IS_FPGA=0

NV_COMPONENT_NEEDED_HEADER_INTERFACE_DIRS := \
        $(NV_SOURCE)/core/drivers/nvrm
#
# Board specific components
#
NV_COMPONENT_ODM_STATIC := \
        query
include $(NV_SOURCE)/bootloader/nvbootloader/odm-partner/Makefile.odm.tmk

# C startup code provided by utils/nvos/aos/nvap/nvos_aos_gcc.c
NV_COMPONENT_FLAG_C_INIT_PROVIDED_BY_NVOS := 1

ifneq ($(NV_TARGET_ARCH),rvds_armv4)
NV_COMPONENT_SCATTER_FILE := \
	nvgetdtb_miniloader_$(NV_TARGET_SOC_FAMILY).x
else
NV_COMPONENT_SCATTER_FILE := \
	nvgetdtb_miniloader_$(NV_TARGET_SOC_FAMILY).ldscript
endif

build:: $(NV_COMPONENT_NAME).h

ifneq ($(NV_TARGET_ARCH),rvds_armv4)
$(NV_COMPONENT_NAME).h: $(NV_COMPONENT_NAME).bin
	$(BIN2HEX) $< $@
else
$(NV_COMPONENT_NAME).h: $(NV_COMPONENT_NAME).bin
	$(BIN2HEX) $</StartRegion $@
endif

$(NV_COMPONENT_NAME).bin: $(NV_COMPONENT_NAME)$(STATIC_EXECUTABLE_SUFFIX)
	$(call NV_BUILD_MACRO_ELF2BIN)

# leave miniloader binaries out of system image and release
NV_COMPONENT_FLAG_SYSTEMIMAGE_SKIP := 1
NV_COMPONENT_FLAG_RELEASE_SKIP     := 1

include $(NV_BUILD_STATIC_EXECUTABLE)
endif

# Local Variables:
# indent-tabs-mode: t
# tab-width: 8
# End:
# vi: set tabstop=8 noexpandtab:
