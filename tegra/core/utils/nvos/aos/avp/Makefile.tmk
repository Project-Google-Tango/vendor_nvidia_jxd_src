################################### tell Emacs this is a -*- makefile-gmake -*-
#
# Copyright (c) 2011-2013, NVIDIA CORPORATION.  All rights reserved.
#
# NVIDIA CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA CORPORATION is strictly prohibited.
#
# tmake for SW Mobile component makefile
#
# nvos/aos AVP specific component makefile
#
###############################################################################

ifdef NV_COMPONENT_FLAG_STATIC_LIBRARY_SECTION
include $(NV_BUILD_START_COMPONENT)

NV_COMPONENT_NAME            := libavpmain_avp_nvos
NV_COMPONENT_SOURCES         := \
	aos_avpdebugsemi_stub.c \
	../aos_print.c \
	../aos_process_args.c \
	../aos_profile.c \
	../aos_semi_uart.c \
	../aos_semi_rvice.c \
	../dlmalloc.c \
	../nvos_aos.c \
	../nvos_aos_core.c \
	../nvos_aos_semi.c \
	../nvap/aos_avp.c \
	../nvap/aos_avp_cache_t30.c \
	../nvap/aos_avp_t30.c \
	../nvap/aos_avp_board_info.c \
	../nvap/aos_avp_pmu.c \
	../nvap/init_avp.c \
	../../nvos_alloc.c \
	../../nvos_debug.c \
	../../nvos_file.c \
	../../nvos_pointer_hash.c \
	../../nvos_thread_no_coop.c \
	../../nvos_trace.c \
	../../../nvosutils/nvuhash.c \
	../../../nvosutils/nvustring.c


NV_COMPONENT_SOURCES_PREPROCESSED := \
	../nvap/avp_override.S

ifneq ($(NV_TARGET_ARCH),rvds_armv4)
ifeq ($(NV_BUILD_CONFIGURATION_EXECUTABLE_FOR_AVP_IRAM),1)
NV_COMPONENT_SOURCES         += \
	../nvap/nvos_aos_gcc_avp.c \
	../nvap/nvos_aos_libc.c
ifeq ($(NV_TARGET_ARCH),android)
# Android user space toolchain is used to compile EABI code
NV_COMPONENT_CFLAGS          += -DNO_MALLINFO
endif
endif
endif

# must override NV_IS_AVP definition for this component
NV_COMPONENT_CFLAGS += \
        -DNV_IS_AVP=1 \
	-DNVAOS_SHELL=1

# TODO: Are core-private includes going to be a problem?
NV_COMPONENT_INCLUDES := \
	.. \
	../.. \
	$(NV_SOURCE)/hwinc \
	$(NV_SOURCE)/hwinc/$(NV_TARGET_SOC_FAMILY) \
	$(NV_SOURCE)/hwinc-private \
	$(NV_SOURCE)/hwinc-private/$(NV_TARGET_SOC_FAMILY) \
	../../../../drivers/nvrm/nvrmkernel/core \
	$(NV_SOURCE)/core-private/include

# add Nvidia POSIX headers for environments that don't have them
ifneq ($(filter qnx rvds_%,$(NV_TARGET_ARCH)),)
NV_COMPONENT_INCLUDES += \
	../../../../include/nvposix
endif

NV_COMPONENT_FLAG_USES_GENERATED_FILES := 1

nvos_swi_client.h: $(NV_SOURCE)/core-private/make/swigen.py
	python $< -client NvOs >$@
endif

# Local Variables:
# indent-tabs-mode: t
# tab-width: 8
# End:
# vi: set tabstop=8 noexpandtab:
