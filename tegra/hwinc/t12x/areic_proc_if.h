//
// Copyright (c) 2013 NVIDIA Corporation.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice,
// this list of conditions and the following disclaimer.
//
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// Neither the name of the NVIDIA Corporation nor the names of its contributors
// may be used to endorse or promote products derived from this software
// without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//

//
// DO NOT EDIT - generated by simspec!
//

#ifndef ___AREIC_PROC_IF_H_INC_
#define ___AREIC_PROC_IF_H_INC_

// Register EIC_PROC_IF_GICC_CTLR_0
#define EIC_PROC_IF_GICC_CTLR_0                 _MK_ADDR_CONST(0x2000)
#define EIC_PROC_IF_GICC_CTLR_0_SECURE                  0x0
#define EIC_PROC_IF_GICC_CTLR_0_WORD_COUNT                      0x1
#define EIC_PROC_IF_GICC_CTLR_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_READ_MASK                       _MK_MASK_CONST(0x7ff)
#define EIC_PROC_IF_GICC_CTLR_0_WRITE_MASK                      _MK_MASK_CONST(0x7ff)
#define EIC_PROC_IF_GICC_CTLR_0_EOImodeNS_SHIFT                 _MK_SHIFT_CONST(10)
#define EIC_PROC_IF_GICC_CTLR_0_EOImodeNS_FIELD                 _MK_FIELD_CONST(0x1, EIC_PROC_IF_GICC_CTLR_0_EOImodeNS_SHIFT)
#define EIC_PROC_IF_GICC_CTLR_0_EOImodeNS_RANGE                 10:10
#define EIC_PROC_IF_GICC_CTLR_0_EOImodeNS_WOFFSET                       0x0
#define EIC_PROC_IF_GICC_CTLR_0_EOImodeNS_DEFAULT                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_EOImodeNS_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_EOImodeNS_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_EOImodeNS_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_CTLR_0_EOImodeS_SHIFT                  _MK_SHIFT_CONST(9)
#define EIC_PROC_IF_GICC_CTLR_0_EOImodeS_FIELD                  _MK_FIELD_CONST(0x1, EIC_PROC_IF_GICC_CTLR_0_EOImodeS_SHIFT)
#define EIC_PROC_IF_GICC_CTLR_0_EOImodeS_RANGE                  9:9
#define EIC_PROC_IF_GICC_CTLR_0_EOImodeS_WOFFSET                        0x0
#define EIC_PROC_IF_GICC_CTLR_0_EOImodeS_DEFAULT                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_EOImodeS_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_EOImodeS_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_EOImodeS_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp1_SHIFT                     _MK_SHIFT_CONST(8)
#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp1_FIELD                     _MK_FIELD_CONST(0x1, EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp1_SHIFT)
#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp1_RANGE                     8:8
#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp1_WOFFSET                   0x0
#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp1_DEFAULT                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp1_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp1_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp1_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp1_SHIFT                     _MK_SHIFT_CONST(7)
#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp1_FIELD                     _MK_FIELD_CONST(0x1, EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp1_SHIFT)
#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp1_RANGE                     7:7
#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp1_WOFFSET                   0x0
#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp1_DEFAULT                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp1_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp1_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp1_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp0_SHIFT                     _MK_SHIFT_CONST(6)
#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp0_FIELD                     _MK_FIELD_CONST(0x1, EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp0_SHIFT)
#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp0_RANGE                     6:6
#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp0_WOFFSET                   0x0
#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp0_DEFAULT                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp0_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp0_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_IRQBypDisGrp0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp0_SHIFT                     _MK_SHIFT_CONST(5)
#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp0_FIELD                     _MK_FIELD_CONST(0x1, EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp0_SHIFT)
#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp0_RANGE                     5:5
#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp0_WOFFSET                   0x0
#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp0_DEFAULT                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp0_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp0_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_FIQBypDisGrp0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_CTLR_0_CBPR_SHIFT                      _MK_SHIFT_CONST(4)
#define EIC_PROC_IF_GICC_CTLR_0_CBPR_FIELD                      _MK_FIELD_CONST(0x1, EIC_PROC_IF_GICC_CTLR_0_CBPR_SHIFT)
#define EIC_PROC_IF_GICC_CTLR_0_CBPR_RANGE                      4:4
#define EIC_PROC_IF_GICC_CTLR_0_CBPR_WOFFSET                    0x0
#define EIC_PROC_IF_GICC_CTLR_0_CBPR_DEFAULT                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_CBPR_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_CBPR_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_CBPR_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_CTLR_0_FIQEn_SHIFT                     _MK_SHIFT_CONST(3)
#define EIC_PROC_IF_GICC_CTLR_0_FIQEn_FIELD                     _MK_FIELD_CONST(0x1, EIC_PROC_IF_GICC_CTLR_0_FIQEn_SHIFT)
#define EIC_PROC_IF_GICC_CTLR_0_FIQEn_RANGE                     3:3
#define EIC_PROC_IF_GICC_CTLR_0_FIQEn_WOFFSET                   0x0
#define EIC_PROC_IF_GICC_CTLR_0_FIQEn_DEFAULT                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_FIQEn_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_FIQEn_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_FIQEn_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_CTLR_0_AckCtl_SHIFT                    _MK_SHIFT_CONST(2)
#define EIC_PROC_IF_GICC_CTLR_0_AckCtl_FIELD                    _MK_FIELD_CONST(0x1, EIC_PROC_IF_GICC_CTLR_0_AckCtl_SHIFT)
#define EIC_PROC_IF_GICC_CTLR_0_AckCtl_RANGE                    2:2
#define EIC_PROC_IF_GICC_CTLR_0_AckCtl_WOFFSET                  0x0
#define EIC_PROC_IF_GICC_CTLR_0_AckCtl_DEFAULT                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_AckCtl_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_AckCtl_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_AckCtl_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp1_SHIFT                        _MK_SHIFT_CONST(1)
#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp1_FIELD                        _MK_FIELD_CONST(0x1, EIC_PROC_IF_GICC_CTLR_0_EnableGrp1_SHIFT)
#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp1_RANGE                        1:1
#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp1_WOFFSET                      0x0
#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp1_DEFAULT                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp1_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp1_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp1_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp0_SHIFT                        _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp0_FIELD                        _MK_FIELD_CONST(0x1, EIC_PROC_IF_GICC_CTLR_0_EnableGrp0_SHIFT)
#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp0_RANGE                        0:0
#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp0_WOFFSET                      0x0
#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp0_DEFAULT                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp0_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp0_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_CTLR_0_EnableGrp0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register EIC_PROC_IF_GICC_PMR_0
#define EIC_PROC_IF_GICC_PMR_0                  _MK_ADDR_CONST(0x2004)
#define EIC_PROC_IF_GICC_PMR_0_SECURE                   0x0
#define EIC_PROC_IF_GICC_PMR_0_WORD_COUNT                       0x1
#define EIC_PROC_IF_GICC_PMR_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_PMR_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_PMR_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_PMR_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_PMR_0_READ_MASK                        _MK_MASK_CONST(0xff)
#define EIC_PROC_IF_GICC_PMR_0_WRITE_MASK                       _MK_MASK_CONST(0xff)
#define EIC_PROC_IF_GICC_PMR_0_Priority_SHIFT                   _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_PMR_0_Priority_FIELD                   _MK_FIELD_CONST(0xff, EIC_PROC_IF_GICC_PMR_0_Priority_SHIFT)
#define EIC_PROC_IF_GICC_PMR_0_Priority_RANGE                   7:0
#define EIC_PROC_IF_GICC_PMR_0_Priority_WOFFSET                 0x0
#define EIC_PROC_IF_GICC_PMR_0_Priority_DEFAULT                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_PMR_0_Priority_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_PMR_0_Priority_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_PMR_0_Priority_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register EIC_PROC_IF_GICC_BPR_0
#define EIC_PROC_IF_GICC_BPR_0                  _MK_ADDR_CONST(0x2008)
#define EIC_PROC_IF_GICC_BPR_0_SECURE                   0x0
#define EIC_PROC_IF_GICC_BPR_0_WORD_COUNT                       0x1
#define EIC_PROC_IF_GICC_BPR_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_BPR_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_BPR_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_BPR_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_BPR_0_READ_MASK                        _MK_MASK_CONST(0x7)
#define EIC_PROC_IF_GICC_BPR_0_WRITE_MASK                       _MK_MASK_CONST(0x7)
#define EIC_PROC_IF_GICC_BPR_0_BinaryPoint_SHIFT                        _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_BPR_0_BinaryPoint_FIELD                        _MK_FIELD_CONST(0x7, EIC_PROC_IF_GICC_BPR_0_BinaryPoint_SHIFT)
#define EIC_PROC_IF_GICC_BPR_0_BinaryPoint_RANGE                        2:0
#define EIC_PROC_IF_GICC_BPR_0_BinaryPoint_WOFFSET                      0x0
#define EIC_PROC_IF_GICC_BPR_0_BinaryPoint_DEFAULT                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_BPR_0_BinaryPoint_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_BPR_0_BinaryPoint_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_BPR_0_BinaryPoint_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register EIC_PROC_IF_GICC_IAR_0
#define EIC_PROC_IF_GICC_IAR_0                  _MK_ADDR_CONST(0x200c)
#define EIC_PROC_IF_GICC_IAR_0_SECURE                   0x0
#define EIC_PROC_IF_GICC_IAR_0_WORD_COUNT                       0x1
#define EIC_PROC_IF_GICC_IAR_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IAR_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IAR_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IAR_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IAR_0_READ_MASK                        _MK_MASK_CONST(0x1fff)
#define EIC_PROC_IF_GICC_IAR_0_WRITE_MASK                       _MK_MASK_CONST(0x1fff)
#define EIC_PROC_IF_GICC_IAR_0_CPUID_SHIFT                      _MK_SHIFT_CONST(10)
#define EIC_PROC_IF_GICC_IAR_0_CPUID_FIELD                      _MK_FIELD_CONST(0x7, EIC_PROC_IF_GICC_IAR_0_CPUID_SHIFT)
#define EIC_PROC_IF_GICC_IAR_0_CPUID_RANGE                      12:10
#define EIC_PROC_IF_GICC_IAR_0_CPUID_WOFFSET                    0x0
#define EIC_PROC_IF_GICC_IAR_0_CPUID_DEFAULT                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IAR_0_CPUID_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IAR_0_CPUID_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IAR_0_CPUID_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_IAR_0_InterruptID_SHIFT                        _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_IAR_0_InterruptID_FIELD                        _MK_FIELD_CONST(0x3ff, EIC_PROC_IF_GICC_IAR_0_InterruptID_SHIFT)
#define EIC_PROC_IF_GICC_IAR_0_InterruptID_RANGE                        9:0
#define EIC_PROC_IF_GICC_IAR_0_InterruptID_WOFFSET                      0x0
#define EIC_PROC_IF_GICC_IAR_0_InterruptID_DEFAULT                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IAR_0_InterruptID_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IAR_0_InterruptID_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IAR_0_InterruptID_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IAR_0_InterruptID_STI_LOW                      _MK_ENUM_CONST(0)
#define EIC_PROC_IF_GICC_IAR_0_InterruptID_STI_HIGH                     _MK_ENUM_CONST(15)
#define EIC_PROC_IF_GICC_IAR_0_InterruptID_PPI_LOW                      _MK_ENUM_CONST(16)
#define EIC_PROC_IF_GICC_IAR_0_InterruptID_PPI_HIGH                     _MK_ENUM_CONST(31)
#define EIC_PROC_IF_GICC_IAR_0_InterruptID_SPI_LOW                      _MK_ENUM_CONST(32)
#define EIC_PROC_IF_GICC_IAR_0_InterruptID_SPI_HIGH                     _MK_ENUM_CONST(160)
#define EIC_PROC_IF_GICC_IAR_0_InterruptID_HIGHEST_PRI_NONSECURE                        _MK_ENUM_CONST(1022)
#define EIC_PROC_IF_GICC_IAR_0_InterruptID_NO_OUTSTANDING_INTR                  _MK_ENUM_CONST(1023)


// Register EIC_PROC_IF_GICC_EOIR_0
#define EIC_PROC_IF_GICC_EOIR_0                 _MK_ADDR_CONST(0x2010)
#define EIC_PROC_IF_GICC_EOIR_0_SECURE                  0x0
#define EIC_PROC_IF_GICC_EOIR_0_WORD_COUNT                      0x1
#define EIC_PROC_IF_GICC_EOIR_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_EOIR_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_EOIR_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_EOIR_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_EOIR_0_READ_MASK                       _MK_MASK_CONST(0x1fff)
#define EIC_PROC_IF_GICC_EOIR_0_WRITE_MASK                      _MK_MASK_CONST(0x1fff)
#define EIC_PROC_IF_GICC_EOIR_0_CPUID_SHIFT                     _MK_SHIFT_CONST(10)
#define EIC_PROC_IF_GICC_EOIR_0_CPUID_FIELD                     _MK_FIELD_CONST(0x7, EIC_PROC_IF_GICC_EOIR_0_CPUID_SHIFT)
#define EIC_PROC_IF_GICC_EOIR_0_CPUID_RANGE                     12:10
#define EIC_PROC_IF_GICC_EOIR_0_CPUID_WOFFSET                   0x0
#define EIC_PROC_IF_GICC_EOIR_0_CPUID_DEFAULT                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_EOIR_0_CPUID_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_EOIR_0_CPUID_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_EOIR_0_CPUID_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_EOIR_0_EOIINTID_SHIFT                  _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_EOIR_0_EOIINTID_FIELD                  _MK_FIELD_CONST(0x3ff, EIC_PROC_IF_GICC_EOIR_0_EOIINTID_SHIFT)
#define EIC_PROC_IF_GICC_EOIR_0_EOIINTID_RANGE                  9:0
#define EIC_PROC_IF_GICC_EOIR_0_EOIINTID_WOFFSET                        0x0
#define EIC_PROC_IF_GICC_EOIR_0_EOIINTID_DEFAULT                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_EOIR_0_EOIINTID_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_EOIR_0_EOIINTID_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_EOIR_0_EOIINTID_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register EIC_PROC_IF_GICC_RPR_0
#define EIC_PROC_IF_GICC_RPR_0                  _MK_ADDR_CONST(0x2014)
#define EIC_PROC_IF_GICC_RPR_0_SECURE                   0x0
#define EIC_PROC_IF_GICC_RPR_0_WORD_COUNT                       0x1
#define EIC_PROC_IF_GICC_RPR_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_RPR_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_RPR_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_RPR_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_RPR_0_READ_MASK                        _MK_MASK_CONST(0xff)
#define EIC_PROC_IF_GICC_RPR_0_WRITE_MASK                       _MK_MASK_CONST(0xff)
#define EIC_PROC_IF_GICC_RPR_0_Priority_SHIFT                   _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_RPR_0_Priority_FIELD                   _MK_FIELD_CONST(0xff, EIC_PROC_IF_GICC_RPR_0_Priority_SHIFT)
#define EIC_PROC_IF_GICC_RPR_0_Priority_RANGE                   7:0
#define EIC_PROC_IF_GICC_RPR_0_Priority_WOFFSET                 0x0
#define EIC_PROC_IF_GICC_RPR_0_Priority_DEFAULT                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_RPR_0_Priority_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_RPR_0_Priority_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_RPR_0_Priority_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register EIC_PROC_IF_GICC_HPPIR_0
#define EIC_PROC_IF_GICC_HPPIR_0                        _MK_ADDR_CONST(0x2018)
#define EIC_PROC_IF_GICC_HPPIR_0_SECURE                         0x0
#define EIC_PROC_IF_GICC_HPPIR_0_WORD_COUNT                     0x1
#define EIC_PROC_IF_GICC_HPPIR_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_HPPIR_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_HPPIR_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_HPPIR_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_HPPIR_0_READ_MASK                      _MK_MASK_CONST(0x1fff)
#define EIC_PROC_IF_GICC_HPPIR_0_WRITE_MASK                     _MK_MASK_CONST(0x1fff)
#define EIC_PROC_IF_GICC_HPPIR_0_CPUID_SHIFT                    _MK_SHIFT_CONST(10)
#define EIC_PROC_IF_GICC_HPPIR_0_CPUID_FIELD                    _MK_FIELD_CONST(0x7, EIC_PROC_IF_GICC_HPPIR_0_CPUID_SHIFT)
#define EIC_PROC_IF_GICC_HPPIR_0_CPUID_RANGE                    12:10
#define EIC_PROC_IF_GICC_HPPIR_0_CPUID_WOFFSET                  0x0
#define EIC_PROC_IF_GICC_HPPIR_0_CPUID_DEFAULT                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_HPPIR_0_CPUID_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_HPPIR_0_CPUID_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_HPPIR_0_CPUID_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_SHIFT                        _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_FIELD                        _MK_FIELD_CONST(0x3ff, EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_SHIFT)
#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_RANGE                        9:0
#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_WOFFSET                      0x0
#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_DEFAULT                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_STI_LOW                      _MK_ENUM_CONST(0)
#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_STI_HIGH                     _MK_ENUM_CONST(15)
#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_PPI_LOW                      _MK_ENUM_CONST(16)
#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_PPI_HIGH                     _MK_ENUM_CONST(31)
#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_SPI_LOW                      _MK_ENUM_CONST(32)
#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_SPI_HIGH                     _MK_ENUM_CONST(160)
#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_HIGHEST_PRI_NONSECURE                        _MK_ENUM_CONST(1022)
#define EIC_PROC_IF_GICC_HPPIR_0_PENDINTID_NO_OUTSTANDING_INTR                  _MK_ENUM_CONST(1023)


// Register EIC_PROC_IF_GICC_ABPR_0
#define EIC_PROC_IF_GICC_ABPR_0                 _MK_ADDR_CONST(0x201c)
#define EIC_PROC_IF_GICC_ABPR_0_SECURE                  0x0
#define EIC_PROC_IF_GICC_ABPR_0_WORD_COUNT                      0x1
#define EIC_PROC_IF_GICC_ABPR_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_ABPR_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_ABPR_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_ABPR_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_ABPR_0_READ_MASK                       _MK_MASK_CONST(0x7)
#define EIC_PROC_IF_GICC_ABPR_0_WRITE_MASK                      _MK_MASK_CONST(0x7)
#define EIC_PROC_IF_GICC_ABPR_0_BinaryPoint_SHIFT                       _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_ABPR_0_BinaryPoint_FIELD                       _MK_FIELD_CONST(0x7, EIC_PROC_IF_GICC_ABPR_0_BinaryPoint_SHIFT)
#define EIC_PROC_IF_GICC_ABPR_0_BinaryPoint_RANGE                       2:0
#define EIC_PROC_IF_GICC_ABPR_0_BinaryPoint_WOFFSET                     0x0
#define EIC_PROC_IF_GICC_ABPR_0_BinaryPoint_DEFAULT                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_ABPR_0_BinaryPoint_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_ABPR_0_BinaryPoint_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_ABPR_0_BinaryPoint_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register EIC_PROC_IF_GICC_AIAR_0
#define EIC_PROC_IF_GICC_AIAR_0                 _MK_ADDR_CONST(0x2020)
#define EIC_PROC_IF_GICC_AIAR_0_SECURE                  0x0
#define EIC_PROC_IF_GICC_AIAR_0_WORD_COUNT                      0x1
#define EIC_PROC_IF_GICC_AIAR_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AIAR_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AIAR_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AIAR_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AIAR_0_READ_MASK                       _MK_MASK_CONST(0x1fff)
#define EIC_PROC_IF_GICC_AIAR_0_WRITE_MASK                      _MK_MASK_CONST(0x1fff)
#define EIC_PROC_IF_GICC_AIAR_0_CPUID_SHIFT                     _MK_SHIFT_CONST(10)
#define EIC_PROC_IF_GICC_AIAR_0_CPUID_FIELD                     _MK_FIELD_CONST(0x7, EIC_PROC_IF_GICC_AIAR_0_CPUID_SHIFT)
#define EIC_PROC_IF_GICC_AIAR_0_CPUID_RANGE                     12:10
#define EIC_PROC_IF_GICC_AIAR_0_CPUID_WOFFSET                   0x0
#define EIC_PROC_IF_GICC_AIAR_0_CPUID_DEFAULT                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AIAR_0_CPUID_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AIAR_0_CPUID_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AIAR_0_CPUID_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_AIAR_0_InterruptID_SHIFT                       _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_AIAR_0_InterruptID_FIELD                       _MK_FIELD_CONST(0x3ff, EIC_PROC_IF_GICC_AIAR_0_InterruptID_SHIFT)
#define EIC_PROC_IF_GICC_AIAR_0_InterruptID_RANGE                       9:0
#define EIC_PROC_IF_GICC_AIAR_0_InterruptID_WOFFSET                     0x0
#define EIC_PROC_IF_GICC_AIAR_0_InterruptID_DEFAULT                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AIAR_0_InterruptID_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AIAR_0_InterruptID_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AIAR_0_InterruptID_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register EIC_PROC_IF_GICC_AEOIR_0
#define EIC_PROC_IF_GICC_AEOIR_0                        _MK_ADDR_CONST(0x2024)
#define EIC_PROC_IF_GICC_AEOIR_0_SECURE                         0x0
#define EIC_PROC_IF_GICC_AEOIR_0_WORD_COUNT                     0x1
#define EIC_PROC_IF_GICC_AEOIR_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AEOIR_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AEOIR_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AEOIR_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AEOIR_0_READ_MASK                      _MK_MASK_CONST(0x1fff)
#define EIC_PROC_IF_GICC_AEOIR_0_WRITE_MASK                     _MK_MASK_CONST(0x1fff)
#define EIC_PROC_IF_GICC_AEOIR_0_CPUID_SHIFT                    _MK_SHIFT_CONST(10)
#define EIC_PROC_IF_GICC_AEOIR_0_CPUID_FIELD                    _MK_FIELD_CONST(0x7, EIC_PROC_IF_GICC_AEOIR_0_CPUID_SHIFT)
#define EIC_PROC_IF_GICC_AEOIR_0_CPUID_RANGE                    12:10
#define EIC_PROC_IF_GICC_AEOIR_0_CPUID_WOFFSET                  0x0
#define EIC_PROC_IF_GICC_AEOIR_0_CPUID_DEFAULT                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AEOIR_0_CPUID_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AEOIR_0_CPUID_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AEOIR_0_CPUID_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_AEOIR_0_InterruptID_SHIFT                      _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_AEOIR_0_InterruptID_FIELD                      _MK_FIELD_CONST(0x3ff, EIC_PROC_IF_GICC_AEOIR_0_InterruptID_SHIFT)
#define EIC_PROC_IF_GICC_AEOIR_0_InterruptID_RANGE                      9:0
#define EIC_PROC_IF_GICC_AEOIR_0_InterruptID_WOFFSET                    0x0
#define EIC_PROC_IF_GICC_AEOIR_0_InterruptID_DEFAULT                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AEOIR_0_InterruptID_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AEOIR_0_InterruptID_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AEOIR_0_InterruptID_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register EIC_PROC_IF_GICC_AHPPIR_0
#define EIC_PROC_IF_GICC_AHPPIR_0                       _MK_ADDR_CONST(0x2028)
#define EIC_PROC_IF_GICC_AHPPIR_0_SECURE                        0x0
#define EIC_PROC_IF_GICC_AHPPIR_0_WORD_COUNT                    0x1
#define EIC_PROC_IF_GICC_AHPPIR_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AHPPIR_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AHPPIR_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AHPPIR_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AHPPIR_0_READ_MASK                     _MK_MASK_CONST(0x1fff)
#define EIC_PROC_IF_GICC_AHPPIR_0_WRITE_MASK                    _MK_MASK_CONST(0x1fff)
#define EIC_PROC_IF_GICC_AHPPIR_0_CPUID_SHIFT                   _MK_SHIFT_CONST(10)
#define EIC_PROC_IF_GICC_AHPPIR_0_CPUID_FIELD                   _MK_FIELD_CONST(0x7, EIC_PROC_IF_GICC_AHPPIR_0_CPUID_SHIFT)
#define EIC_PROC_IF_GICC_AHPPIR_0_CPUID_RANGE                   12:10
#define EIC_PROC_IF_GICC_AHPPIR_0_CPUID_WOFFSET                 0x0
#define EIC_PROC_IF_GICC_AHPPIR_0_CPUID_DEFAULT                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AHPPIR_0_CPUID_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AHPPIR_0_CPUID_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AHPPIR_0_CPUID_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_AHPPIR_0_InterruptID_SHIFT                     _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_AHPPIR_0_InterruptID_FIELD                     _MK_FIELD_CONST(0x3ff, EIC_PROC_IF_GICC_AHPPIR_0_InterruptID_SHIFT)
#define EIC_PROC_IF_GICC_AHPPIR_0_InterruptID_RANGE                     9:0
#define EIC_PROC_IF_GICC_AHPPIR_0_InterruptID_WOFFSET                   0x0
#define EIC_PROC_IF_GICC_AHPPIR_0_InterruptID_DEFAULT                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AHPPIR_0_InterruptID_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AHPPIR_0_InterruptID_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_AHPPIR_0_InterruptID_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Reserved address 8236 [0x202c]

// Reserved address 8240 [0x2030]

// Reserved address 8244 [0x2034]

// Reserved address 8248 [0x2038]

// Reserved address 8252 [0x203c]

// Reserved address 8256 [0x2040]

// Reserved address 8260 [0x2044]

// Reserved address 8264 [0x2048]

// Reserved address 8268 [0x204c]

// Reserved address 8272 [0x2050]

// Reserved address 8276 [0x2054]

// Reserved address 8280 [0x2058]

// Reserved address 8284 [0x205c]

// Reserved address 8288 [0x2060]

// Reserved address 8292 [0x2064]

// Reserved address 8296 [0x2068]

// Reserved address 8300 [0x206c]

// Reserved address 8304 [0x2070]

// Reserved address 8308 [0x2074]

// Reserved address 8312 [0x2078]

// Reserved address 8316 [0x207c]

// Reserved address 8320 [0x2080]

// Reserved address 8324 [0x2084]

// Reserved address 8328 [0x2088]

// Reserved address 8332 [0x208c]

// Reserved address 8336 [0x2090]

// Reserved address 8340 [0x2094]

// Reserved address 8344 [0x2098]

// Reserved address 8348 [0x209c]

// Reserved address 8352 [0x20a0]

// Reserved address 8356 [0x20a4]

// Reserved address 8360 [0x20a8]

// Reserved address 8364 [0x20ac]

// Reserved address 8368 [0x20b0]

// Reserved address 8372 [0x20b4]

// Reserved address 8376 [0x20b8]

// Reserved address 8380 [0x20bc]

// Reserved address 8384 [0x20c0]

// Reserved address 8388 [0x20c4]

// Reserved address 8392 [0x20c8]

// Reserved address 8396 [0x20cc]

// Register EIC_PROC_IF_GICC_APR0_0
#define EIC_PROC_IF_GICC_APR0_0                 _MK_ADDR_CONST(0x20d0)
#define EIC_PROC_IF_GICC_APR0_0_SECURE                  0x0
#define EIC_PROC_IF_GICC_APR0_0_WORD_COUNT                      0x1
#define EIC_PROC_IF_GICC_APR0_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR0_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR0_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR0_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR0_0_READ_MASK                       _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_APR0_0_WRITE_MASK                      _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_APR0_0_APR0_SHIFT                      _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_APR0_0_APR0_FIELD                      _MK_FIELD_CONST(0xffffffff, EIC_PROC_IF_GICC_APR0_0_APR0_SHIFT)
#define EIC_PROC_IF_GICC_APR0_0_APR0_RANGE                      31:0
#define EIC_PROC_IF_GICC_APR0_0_APR0_WOFFSET                    0x0
#define EIC_PROC_IF_GICC_APR0_0_APR0_DEFAULT                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR0_0_APR0_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR0_0_APR0_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR0_0_APR0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register EIC_PROC_IF_GICC_APR1_0
#define EIC_PROC_IF_GICC_APR1_0                 _MK_ADDR_CONST(0x20d4)
#define EIC_PROC_IF_GICC_APR1_0_SECURE                  0x0
#define EIC_PROC_IF_GICC_APR1_0_WORD_COUNT                      0x1
#define EIC_PROC_IF_GICC_APR1_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR1_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR1_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR1_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR1_0_READ_MASK                       _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_APR1_0_WRITE_MASK                      _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_APR1_0_APR1_SHIFT                      _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_APR1_0_APR1_FIELD                      _MK_FIELD_CONST(0xffffffff, EIC_PROC_IF_GICC_APR1_0_APR1_SHIFT)
#define EIC_PROC_IF_GICC_APR1_0_APR1_RANGE                      31:0
#define EIC_PROC_IF_GICC_APR1_0_APR1_WOFFSET                    0x0
#define EIC_PROC_IF_GICC_APR1_0_APR1_DEFAULT                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR1_0_APR1_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR1_0_APR1_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR1_0_APR1_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register EIC_PROC_IF_GICC_APR2_0
#define EIC_PROC_IF_GICC_APR2_0                 _MK_ADDR_CONST(0x20d8)
#define EIC_PROC_IF_GICC_APR2_0_SECURE                  0x0
#define EIC_PROC_IF_GICC_APR2_0_WORD_COUNT                      0x1
#define EIC_PROC_IF_GICC_APR2_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR2_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR2_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR2_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR2_0_READ_MASK                       _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_APR2_0_WRITE_MASK                      _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_APR2_0_APR2_SHIFT                      _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_APR2_0_APR2_FIELD                      _MK_FIELD_CONST(0xffffffff, EIC_PROC_IF_GICC_APR2_0_APR2_SHIFT)
#define EIC_PROC_IF_GICC_APR2_0_APR2_RANGE                      31:0
#define EIC_PROC_IF_GICC_APR2_0_APR2_WOFFSET                    0x0
#define EIC_PROC_IF_GICC_APR2_0_APR2_DEFAULT                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR2_0_APR2_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR2_0_APR2_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR2_0_APR2_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register EIC_PROC_IF_GICC_APR3_0
#define EIC_PROC_IF_GICC_APR3_0                 _MK_ADDR_CONST(0x20dc)
#define EIC_PROC_IF_GICC_APR3_0_SECURE                  0x0
#define EIC_PROC_IF_GICC_APR3_0_WORD_COUNT                      0x1
#define EIC_PROC_IF_GICC_APR3_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR3_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR3_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR3_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR3_0_READ_MASK                       _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_APR3_0_WRITE_MASK                      _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_APR3_0_APR3_SHIFT                      _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_APR3_0_APR3_FIELD                      _MK_FIELD_CONST(0xffffffff, EIC_PROC_IF_GICC_APR3_0_APR3_SHIFT)
#define EIC_PROC_IF_GICC_APR3_0_APR3_RANGE                      31:0
#define EIC_PROC_IF_GICC_APR3_0_APR3_WOFFSET                    0x0
#define EIC_PROC_IF_GICC_APR3_0_APR3_DEFAULT                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR3_0_APR3_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR3_0_APR3_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_APR3_0_APR3_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register EIC_PROC_IF_GICC_NSAPR0_0
#define EIC_PROC_IF_GICC_NSAPR0_0                       _MK_ADDR_CONST(0x20e0)
#define EIC_PROC_IF_GICC_NSAPR0_0_SECURE                        0x0
#define EIC_PROC_IF_GICC_NSAPR0_0_WORD_COUNT                    0x1
#define EIC_PROC_IF_GICC_NSAPR0_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR0_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR0_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR0_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR0_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_NSAPR0_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_NSAPR0_0_NSAPR0_SHIFT                  _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_NSAPR0_0_NSAPR0_FIELD                  _MK_FIELD_CONST(0xffffffff, EIC_PROC_IF_GICC_NSAPR0_0_NSAPR0_SHIFT)
#define EIC_PROC_IF_GICC_NSAPR0_0_NSAPR0_RANGE                  31:0
#define EIC_PROC_IF_GICC_NSAPR0_0_NSAPR0_WOFFSET                        0x0
#define EIC_PROC_IF_GICC_NSAPR0_0_NSAPR0_DEFAULT                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR0_0_NSAPR0_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR0_0_NSAPR0_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR0_0_NSAPR0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register EIC_PROC_IF_GICC_NSAPR1_0
#define EIC_PROC_IF_GICC_NSAPR1_0                       _MK_ADDR_CONST(0x20e4)
#define EIC_PROC_IF_GICC_NSAPR1_0_SECURE                        0x0
#define EIC_PROC_IF_GICC_NSAPR1_0_WORD_COUNT                    0x1
#define EIC_PROC_IF_GICC_NSAPR1_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR1_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR1_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR1_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR1_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_NSAPR1_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_NSAPR1_0_NSAPR1_SHIFT                  _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_NSAPR1_0_NSAPR1_FIELD                  _MK_FIELD_CONST(0xffffffff, EIC_PROC_IF_GICC_NSAPR1_0_NSAPR1_SHIFT)
#define EIC_PROC_IF_GICC_NSAPR1_0_NSAPR1_RANGE                  31:0
#define EIC_PROC_IF_GICC_NSAPR1_0_NSAPR1_WOFFSET                        0x0
#define EIC_PROC_IF_GICC_NSAPR1_0_NSAPR1_DEFAULT                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR1_0_NSAPR1_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR1_0_NSAPR1_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR1_0_NSAPR1_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register EIC_PROC_IF_GICC_NSAPR2_0
#define EIC_PROC_IF_GICC_NSAPR2_0                       _MK_ADDR_CONST(0x20e8)
#define EIC_PROC_IF_GICC_NSAPR2_0_SECURE                        0x0
#define EIC_PROC_IF_GICC_NSAPR2_0_WORD_COUNT                    0x1
#define EIC_PROC_IF_GICC_NSAPR2_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR2_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR2_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR2_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR2_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_NSAPR2_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_NSAPR2_0_NSAPR2_SHIFT                  _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_NSAPR2_0_NSAPR2_FIELD                  _MK_FIELD_CONST(0xffffffff, EIC_PROC_IF_GICC_NSAPR2_0_NSAPR2_SHIFT)
#define EIC_PROC_IF_GICC_NSAPR2_0_NSAPR2_RANGE                  31:0
#define EIC_PROC_IF_GICC_NSAPR2_0_NSAPR2_WOFFSET                        0x0
#define EIC_PROC_IF_GICC_NSAPR2_0_NSAPR2_DEFAULT                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR2_0_NSAPR2_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR2_0_NSAPR2_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR2_0_NSAPR2_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register EIC_PROC_IF_GICC_NSAPR3_0
#define EIC_PROC_IF_GICC_NSAPR3_0                       _MK_ADDR_CONST(0x20ec)
#define EIC_PROC_IF_GICC_NSAPR3_0_SECURE                        0x0
#define EIC_PROC_IF_GICC_NSAPR3_0_WORD_COUNT                    0x1
#define EIC_PROC_IF_GICC_NSAPR3_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR3_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR3_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR3_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR3_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_NSAPR3_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_NSAPR3_0_NSAPR3_SHIFT                  _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_NSAPR3_0_NSAPR3_FIELD                  _MK_FIELD_CONST(0xffffffff, EIC_PROC_IF_GICC_NSAPR3_0_NSAPR3_SHIFT)
#define EIC_PROC_IF_GICC_NSAPR3_0_NSAPR3_RANGE                  31:0
#define EIC_PROC_IF_GICC_NSAPR3_0_NSAPR3_WOFFSET                        0x0
#define EIC_PROC_IF_GICC_NSAPR3_0_NSAPR3_DEFAULT                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR3_0_NSAPR3_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR3_0_NSAPR3_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_NSAPR3_0_NSAPR3_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Reserved address 8432 [0x20f0]

// Reserved address 8436 [0x20f4]

// Reserved address 8440 [0x20f8]

// Register EIC_PROC_IF_GICC_IIDR_0
#define EIC_PROC_IF_GICC_IIDR_0                 _MK_ADDR_CONST(0x20fc)
#define EIC_PROC_IF_GICC_IIDR_0_SECURE                  0x0
#define EIC_PROC_IF_GICC_IIDR_0_WORD_COUNT                      0x1
#define EIC_PROC_IF_GICC_IIDR_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_READ_MASK                       _MK_MASK_CONST(0xffffffff)
#define EIC_PROC_IF_GICC_IIDR_0_WRITE_MASK                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_ProductID_SHIFT                 _MK_SHIFT_CONST(20)
#define EIC_PROC_IF_GICC_IIDR_0_ProductID_FIELD                 _MK_FIELD_CONST(0xfff, EIC_PROC_IF_GICC_IIDR_0_ProductID_SHIFT)
#define EIC_PROC_IF_GICC_IIDR_0_ProductID_RANGE                 31:20
#define EIC_PROC_IF_GICC_IIDR_0_ProductID_WOFFSET                       0x0
#define EIC_PROC_IF_GICC_IIDR_0_ProductID_DEFAULT                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_ProductID_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_ProductID_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_ProductID_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_IIDR_0_ArchitectureVersion_SHIFT                       _MK_SHIFT_CONST(16)
#define EIC_PROC_IF_GICC_IIDR_0_ArchitectureVersion_FIELD                       _MK_FIELD_CONST(0xf, EIC_PROC_IF_GICC_IIDR_0_ArchitectureVersion_SHIFT)
#define EIC_PROC_IF_GICC_IIDR_0_ArchitectureVersion_RANGE                       19:16
#define EIC_PROC_IF_GICC_IIDR_0_ArchitectureVersion_WOFFSET                     0x0
#define EIC_PROC_IF_GICC_IIDR_0_ArchitectureVersion_DEFAULT                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_ArchitectureVersion_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_ArchitectureVersion_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_ArchitectureVersion_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_IIDR_0_Revision_SHIFT                  _MK_SHIFT_CONST(12)
#define EIC_PROC_IF_GICC_IIDR_0_Revision_FIELD                  _MK_FIELD_CONST(0xf, EIC_PROC_IF_GICC_IIDR_0_Revision_SHIFT)
#define EIC_PROC_IF_GICC_IIDR_0_Revision_RANGE                  15:12
#define EIC_PROC_IF_GICC_IIDR_0_Revision_WOFFSET                        0x0
#define EIC_PROC_IF_GICC_IIDR_0_Revision_DEFAULT                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_Revision_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_Revision_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_Revision_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_IIDR_0_Implementer_SHIFT                       _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_IIDR_0_Implementer_FIELD                       _MK_FIELD_CONST(0xfff, EIC_PROC_IF_GICC_IIDR_0_Implementer_SHIFT)
#define EIC_PROC_IF_GICC_IIDR_0_Implementer_RANGE                       11:0
#define EIC_PROC_IF_GICC_IIDR_0_Implementer_WOFFSET                     0x0
#define EIC_PROC_IF_GICC_IIDR_0_Implementer_DEFAULT                     _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_Implementer_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_Implementer_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_IIDR_0_Implementer_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Reserved address 8448 [0x2100]

// Reserved address 8452 [0x2104]

// Reserved address 8456 [0x2108]

// Reserved address 8460 [0x210c]

// Reserved address 8464 [0x2110]

// Reserved address 8468 [0x2114]

// Reserved address 8472 [0x2118]

// Reserved address 8476 [0x211c]

// Reserved address 8480 [0x2120]

// Reserved address 8484 [0x2124]

// Reserved address 8488 [0x2128]

// Reserved address 8492 [0x212c]

// Reserved address 8496 [0x2130]

// Reserved address 8500 [0x2134]

// Reserved address 8504 [0x2138]

// Reserved address 8508 [0x213c]

// Reserved address 8512 [0x2140]

// Reserved address 8516 [0x2144]

// Reserved address 8520 [0x2148]

// Reserved address 8524 [0x214c]

// Reserved address 8528 [0x2150]

// Reserved address 8532 [0x2154]

// Reserved address 8536 [0x2158]

// Reserved address 8540 [0x215c]

// Reserved address 8544 [0x2160]

// Reserved address 8548 [0x2164]

// Reserved address 8552 [0x2168]

// Reserved address 8556 [0x216c]

// Reserved address 8560 [0x2170]

// Reserved address 8564 [0x2174]

// Reserved address 8568 [0x2178]

// Reserved address 8572 [0x217c]

// Reserved address 8576 [0x2180]

// Reserved address 8580 [0x2184]

// Reserved address 8584 [0x2188]

// Reserved address 8588 [0x218c]

// Reserved address 8592 [0x2190]

// Reserved address 8596 [0x2194]

// Reserved address 8600 [0x2198]

// Reserved address 8604 [0x219c]

// Reserved address 8608 [0x21a0]

// Reserved address 8612 [0x21a4]

// Reserved address 8616 [0x21a8]

// Reserved address 8620 [0x21ac]

// Reserved address 8624 [0x21b0]

// Reserved address 8628 [0x21b4]

// Reserved address 8632 [0x21b8]

// Reserved address 8636 [0x21bc]

// Reserved address 8640 [0x21c0]

// Reserved address 8644 [0x21c4]

// Reserved address 8648 [0x21c8]

// Reserved address 8652 [0x21cc]

// Reserved address 8656 [0x21d0]

// Reserved address 8660 [0x21d4]

// Reserved address 8664 [0x21d8]

// Reserved address 8668 [0x21dc]

// Reserved address 8672 [0x21e0]

// Reserved address 8676 [0x21e4]

// Reserved address 8680 [0x21e8]

// Reserved address 8684 [0x21ec]

// Reserved address 8688 [0x21f0]

// Reserved address 8692 [0x21f4]

// Reserved address 8696 [0x21f8]

// Reserved address 8700 [0x21fc]

// Reserved address 8704 [0x2200]

// Reserved address 8708 [0x2204]

// Reserved address 8712 [0x2208]

// Reserved address 8716 [0x220c]

// Reserved address 8720 [0x2210]

// Reserved address 8724 [0x2214]

// Reserved address 8728 [0x2218]

// Reserved address 8732 [0x221c]

// Reserved address 8736 [0x2220]

// Reserved address 8740 [0x2224]

// Reserved address 8744 [0x2228]

// Reserved address 8748 [0x222c]

// Reserved address 8752 [0x2230]

// Reserved address 8756 [0x2234]

// Reserved address 8760 [0x2238]

// Reserved address 8764 [0x223c]

// Reserved address 8768 [0x2240]

// Reserved address 8772 [0x2244]

// Reserved address 8776 [0x2248]

// Reserved address 8780 [0x224c]

// Reserved address 8784 [0x2250]

// Reserved address 8788 [0x2254]

// Reserved address 8792 [0x2258]

// Reserved address 8796 [0x225c]

// Reserved address 8800 [0x2260]

// Reserved address 8804 [0x2264]

// Reserved address 8808 [0x2268]

// Reserved address 8812 [0x226c]

// Reserved address 8816 [0x2270]

// Reserved address 8820 [0x2274]

// Reserved address 8824 [0x2278]

// Reserved address 8828 [0x227c]

// Reserved address 8832 [0x2280]

// Reserved address 8836 [0x2284]

// Reserved address 8840 [0x2288]

// Reserved address 8844 [0x228c]

// Reserved address 8848 [0x2290]

// Reserved address 8852 [0x2294]

// Reserved address 8856 [0x2298]

// Reserved address 8860 [0x229c]

// Reserved address 8864 [0x22a0]

// Reserved address 8868 [0x22a4]

// Reserved address 8872 [0x22a8]

// Reserved address 8876 [0x22ac]

// Reserved address 8880 [0x22b0]

// Reserved address 8884 [0x22b4]

// Reserved address 8888 [0x22b8]

// Reserved address 8892 [0x22bc]

// Reserved address 8896 [0x22c0]

// Reserved address 8900 [0x22c4]

// Reserved address 8904 [0x22c8]

// Reserved address 8908 [0x22cc]

// Reserved address 8912 [0x22d0]

// Reserved address 8916 [0x22d4]

// Reserved address 8920 [0x22d8]

// Reserved address 8924 [0x22dc]

// Reserved address 8928 [0x22e0]

// Reserved address 8932 [0x22e4]

// Reserved address 8936 [0x22e8]

// Reserved address 8940 [0x22ec]

// Reserved address 8944 [0x22f0]

// Reserved address 8948 [0x22f4]

// Reserved address 8952 [0x22f8]

// Reserved address 8956 [0x22fc]

// Reserved address 8960 [0x2300]

// Reserved address 8964 [0x2304]

// Reserved address 8968 [0x2308]

// Reserved address 8972 [0x230c]

// Reserved address 8976 [0x2310]

// Reserved address 8980 [0x2314]

// Reserved address 8984 [0x2318]

// Reserved address 8988 [0x231c]

// Reserved address 8992 [0x2320]

// Reserved address 8996 [0x2324]

// Reserved address 9000 [0x2328]

// Reserved address 9004 [0x232c]

// Reserved address 9008 [0x2330]

// Reserved address 9012 [0x2334]

// Reserved address 9016 [0x2338]

// Reserved address 9020 [0x233c]

// Reserved address 9024 [0x2340]

// Reserved address 9028 [0x2344]

// Reserved address 9032 [0x2348]

// Reserved address 9036 [0x234c]

// Reserved address 9040 [0x2350]

// Reserved address 9044 [0x2354]

// Reserved address 9048 [0x2358]

// Reserved address 9052 [0x235c]

// Reserved address 9056 [0x2360]

// Reserved address 9060 [0x2364]

// Reserved address 9064 [0x2368]

// Reserved address 9068 [0x236c]

// Reserved address 9072 [0x2370]

// Reserved address 9076 [0x2374]

// Reserved address 9080 [0x2378]

// Reserved address 9084 [0x237c]

// Reserved address 9088 [0x2380]

// Reserved address 9092 [0x2384]

// Reserved address 9096 [0x2388]

// Reserved address 9100 [0x238c]

// Reserved address 9104 [0x2390]

// Reserved address 9108 [0x2394]

// Reserved address 9112 [0x2398]

// Reserved address 9116 [0x239c]

// Reserved address 9120 [0x23a0]

// Reserved address 9124 [0x23a4]

// Reserved address 9128 [0x23a8]

// Reserved address 9132 [0x23ac]

// Reserved address 9136 [0x23b0]

// Reserved address 9140 [0x23b4]

// Reserved address 9144 [0x23b8]

// Reserved address 9148 [0x23bc]

// Reserved address 9152 [0x23c0]

// Reserved address 9156 [0x23c4]

// Reserved address 9160 [0x23c8]

// Reserved address 9164 [0x23cc]

// Reserved address 9168 [0x23d0]

// Reserved address 9172 [0x23d4]

// Reserved address 9176 [0x23d8]

// Reserved address 9180 [0x23dc]

// Reserved address 9184 [0x23e0]

// Reserved address 9188 [0x23e4]

// Reserved address 9192 [0x23e8]

// Reserved address 9196 [0x23ec]

// Reserved address 9200 [0x23f0]

// Reserved address 9204 [0x23f4]

// Reserved address 9208 [0x23f8]

// Reserved address 9212 [0x23fc]

// Reserved address 9216 [0x2400]

// Reserved address 9220 [0x2404]

// Reserved address 9224 [0x2408]

// Reserved address 9228 [0x240c]

// Reserved address 9232 [0x2410]

// Reserved address 9236 [0x2414]

// Reserved address 9240 [0x2418]

// Reserved address 9244 [0x241c]

// Reserved address 9248 [0x2420]

// Reserved address 9252 [0x2424]

// Reserved address 9256 [0x2428]

// Reserved address 9260 [0x242c]

// Reserved address 9264 [0x2430]

// Reserved address 9268 [0x2434]

// Reserved address 9272 [0x2438]

// Reserved address 9276 [0x243c]

// Reserved address 9280 [0x2440]

// Reserved address 9284 [0x2444]

// Reserved address 9288 [0x2448]

// Reserved address 9292 [0x244c]

// Reserved address 9296 [0x2450]

// Reserved address 9300 [0x2454]

// Reserved address 9304 [0x2458]

// Reserved address 9308 [0x245c]

// Reserved address 9312 [0x2460]

// Reserved address 9316 [0x2464]

// Reserved address 9320 [0x2468]

// Reserved address 9324 [0x246c]

// Reserved address 9328 [0x2470]

// Reserved address 9332 [0x2474]

// Reserved address 9336 [0x2478]

// Reserved address 9340 [0x247c]

// Reserved address 9344 [0x2480]

// Reserved address 9348 [0x2484]

// Reserved address 9352 [0x2488]

// Reserved address 9356 [0x248c]

// Reserved address 9360 [0x2490]

// Reserved address 9364 [0x2494]

// Reserved address 9368 [0x2498]

// Reserved address 9372 [0x249c]

// Reserved address 9376 [0x24a0]

// Reserved address 9380 [0x24a4]

// Reserved address 9384 [0x24a8]

// Reserved address 9388 [0x24ac]

// Reserved address 9392 [0x24b0]

// Reserved address 9396 [0x24b4]

// Reserved address 9400 [0x24b8]

// Reserved address 9404 [0x24bc]

// Reserved address 9408 [0x24c0]

// Reserved address 9412 [0x24c4]

// Reserved address 9416 [0x24c8]

// Reserved address 9420 [0x24cc]

// Reserved address 9424 [0x24d0]

// Reserved address 9428 [0x24d4]

// Reserved address 9432 [0x24d8]

// Reserved address 9436 [0x24dc]

// Reserved address 9440 [0x24e0]

// Reserved address 9444 [0x24e4]

// Reserved address 9448 [0x24e8]

// Reserved address 9452 [0x24ec]

// Reserved address 9456 [0x24f0]

// Reserved address 9460 [0x24f4]

// Reserved address 9464 [0x24f8]

// Reserved address 9468 [0x24fc]

// Reserved address 9472 [0x2500]

// Reserved address 9476 [0x2504]

// Reserved address 9480 [0x2508]

// Reserved address 9484 [0x250c]

// Reserved address 9488 [0x2510]

// Reserved address 9492 [0x2514]

// Reserved address 9496 [0x2518]

// Reserved address 9500 [0x251c]

// Reserved address 9504 [0x2520]

// Reserved address 9508 [0x2524]

// Reserved address 9512 [0x2528]

// Reserved address 9516 [0x252c]

// Reserved address 9520 [0x2530]

// Reserved address 9524 [0x2534]

// Reserved address 9528 [0x2538]

// Reserved address 9532 [0x253c]

// Reserved address 9536 [0x2540]

// Reserved address 9540 [0x2544]

// Reserved address 9544 [0x2548]

// Reserved address 9548 [0x254c]

// Reserved address 9552 [0x2550]

// Reserved address 9556 [0x2554]

// Reserved address 9560 [0x2558]

// Reserved address 9564 [0x255c]

// Reserved address 9568 [0x2560]

// Reserved address 9572 [0x2564]

// Reserved address 9576 [0x2568]

// Reserved address 9580 [0x256c]

// Reserved address 9584 [0x2570]

// Reserved address 9588 [0x2574]

// Reserved address 9592 [0x2578]

// Reserved address 9596 [0x257c]

// Reserved address 9600 [0x2580]

// Reserved address 9604 [0x2584]

// Reserved address 9608 [0x2588]

// Reserved address 9612 [0x258c]

// Reserved address 9616 [0x2590]

// Reserved address 9620 [0x2594]

// Reserved address 9624 [0x2598]

// Reserved address 9628 [0x259c]

// Reserved address 9632 [0x25a0]

// Reserved address 9636 [0x25a4]

// Reserved address 9640 [0x25a8]

// Reserved address 9644 [0x25ac]

// Reserved address 9648 [0x25b0]

// Reserved address 9652 [0x25b4]

// Reserved address 9656 [0x25b8]

// Reserved address 9660 [0x25bc]

// Reserved address 9664 [0x25c0]

// Reserved address 9668 [0x25c4]

// Reserved address 9672 [0x25c8]

// Reserved address 9676 [0x25cc]

// Reserved address 9680 [0x25d0]

// Reserved address 9684 [0x25d4]

// Reserved address 9688 [0x25d8]

// Reserved address 9692 [0x25dc]

// Reserved address 9696 [0x25e0]

// Reserved address 9700 [0x25e4]

// Reserved address 9704 [0x25e8]

// Reserved address 9708 [0x25ec]

// Reserved address 9712 [0x25f0]

// Reserved address 9716 [0x25f4]

// Reserved address 9720 [0x25f8]

// Reserved address 9724 [0x25fc]

// Reserved address 9728 [0x2600]

// Reserved address 9732 [0x2604]

// Reserved address 9736 [0x2608]

// Reserved address 9740 [0x260c]

// Reserved address 9744 [0x2610]

// Reserved address 9748 [0x2614]

// Reserved address 9752 [0x2618]

// Reserved address 9756 [0x261c]

// Reserved address 9760 [0x2620]

// Reserved address 9764 [0x2624]

// Reserved address 9768 [0x2628]

// Reserved address 9772 [0x262c]

// Reserved address 9776 [0x2630]

// Reserved address 9780 [0x2634]

// Reserved address 9784 [0x2638]

// Reserved address 9788 [0x263c]

// Reserved address 9792 [0x2640]

// Reserved address 9796 [0x2644]

// Reserved address 9800 [0x2648]

// Reserved address 9804 [0x264c]

// Reserved address 9808 [0x2650]

// Reserved address 9812 [0x2654]

// Reserved address 9816 [0x2658]

// Reserved address 9820 [0x265c]

// Reserved address 9824 [0x2660]

// Reserved address 9828 [0x2664]

// Reserved address 9832 [0x2668]

// Reserved address 9836 [0x266c]

// Reserved address 9840 [0x2670]

// Reserved address 9844 [0x2674]

// Reserved address 9848 [0x2678]

// Reserved address 9852 [0x267c]

// Reserved address 9856 [0x2680]

// Reserved address 9860 [0x2684]

// Reserved address 9864 [0x2688]

// Reserved address 9868 [0x268c]

// Reserved address 9872 [0x2690]

// Reserved address 9876 [0x2694]

// Reserved address 9880 [0x2698]

// Reserved address 9884 [0x269c]

// Reserved address 9888 [0x26a0]

// Reserved address 9892 [0x26a4]

// Reserved address 9896 [0x26a8]

// Reserved address 9900 [0x26ac]

// Reserved address 9904 [0x26b0]

// Reserved address 9908 [0x26b4]

// Reserved address 9912 [0x26b8]

// Reserved address 9916 [0x26bc]

// Reserved address 9920 [0x26c0]

// Reserved address 9924 [0x26c4]

// Reserved address 9928 [0x26c8]

// Reserved address 9932 [0x26cc]

// Reserved address 9936 [0x26d0]

// Reserved address 9940 [0x26d4]

// Reserved address 9944 [0x26d8]

// Reserved address 9948 [0x26dc]

// Reserved address 9952 [0x26e0]

// Reserved address 9956 [0x26e4]

// Reserved address 9960 [0x26e8]

// Reserved address 9964 [0x26ec]

// Reserved address 9968 [0x26f0]

// Reserved address 9972 [0x26f4]

// Reserved address 9976 [0x26f8]

// Reserved address 9980 [0x26fc]

// Reserved address 9984 [0x2700]

// Reserved address 9988 [0x2704]

// Reserved address 9992 [0x2708]

// Reserved address 9996 [0x270c]

// Reserved address 10000 [0x2710]

// Reserved address 10004 [0x2714]

// Reserved address 10008 [0x2718]

// Reserved address 10012 [0x271c]

// Reserved address 10016 [0x2720]

// Reserved address 10020 [0x2724]

// Reserved address 10024 [0x2728]

// Reserved address 10028 [0x272c]

// Reserved address 10032 [0x2730]

// Reserved address 10036 [0x2734]

// Reserved address 10040 [0x2738]

// Reserved address 10044 [0x273c]

// Reserved address 10048 [0x2740]

// Reserved address 10052 [0x2744]

// Reserved address 10056 [0x2748]

// Reserved address 10060 [0x274c]

// Reserved address 10064 [0x2750]

// Reserved address 10068 [0x2754]

// Reserved address 10072 [0x2758]

// Reserved address 10076 [0x275c]

// Reserved address 10080 [0x2760]

// Reserved address 10084 [0x2764]

// Reserved address 10088 [0x2768]

// Reserved address 10092 [0x276c]

// Reserved address 10096 [0x2770]

// Reserved address 10100 [0x2774]

// Reserved address 10104 [0x2778]

// Reserved address 10108 [0x277c]

// Reserved address 10112 [0x2780]

// Reserved address 10116 [0x2784]

// Reserved address 10120 [0x2788]

// Reserved address 10124 [0x278c]

// Reserved address 10128 [0x2790]

// Reserved address 10132 [0x2794]

// Reserved address 10136 [0x2798]

// Reserved address 10140 [0x279c]

// Reserved address 10144 [0x27a0]

// Reserved address 10148 [0x27a4]

// Reserved address 10152 [0x27a8]

// Reserved address 10156 [0x27ac]

// Reserved address 10160 [0x27b0]

// Reserved address 10164 [0x27b4]

// Reserved address 10168 [0x27b8]

// Reserved address 10172 [0x27bc]

// Reserved address 10176 [0x27c0]

// Reserved address 10180 [0x27c4]

// Reserved address 10184 [0x27c8]

// Reserved address 10188 [0x27cc]

// Reserved address 10192 [0x27d0]

// Reserved address 10196 [0x27d4]

// Reserved address 10200 [0x27d8]

// Reserved address 10204 [0x27dc]

// Reserved address 10208 [0x27e0]

// Reserved address 10212 [0x27e4]

// Reserved address 10216 [0x27e8]

// Reserved address 10220 [0x27ec]

// Reserved address 10224 [0x27f0]

// Reserved address 10228 [0x27f4]

// Reserved address 10232 [0x27f8]

// Reserved address 10236 [0x27fc]

// Reserved address 10240 [0x2800]

// Reserved address 10244 [0x2804]

// Reserved address 10248 [0x2808]

// Reserved address 10252 [0x280c]

// Reserved address 10256 [0x2810]

// Reserved address 10260 [0x2814]

// Reserved address 10264 [0x2818]

// Reserved address 10268 [0x281c]

// Reserved address 10272 [0x2820]

// Reserved address 10276 [0x2824]

// Reserved address 10280 [0x2828]

// Reserved address 10284 [0x282c]

// Reserved address 10288 [0x2830]

// Reserved address 10292 [0x2834]

// Reserved address 10296 [0x2838]

// Reserved address 10300 [0x283c]

// Reserved address 10304 [0x2840]

// Reserved address 10308 [0x2844]

// Reserved address 10312 [0x2848]

// Reserved address 10316 [0x284c]

// Reserved address 10320 [0x2850]

// Reserved address 10324 [0x2854]

// Reserved address 10328 [0x2858]

// Reserved address 10332 [0x285c]

// Reserved address 10336 [0x2860]

// Reserved address 10340 [0x2864]

// Reserved address 10344 [0x2868]

// Reserved address 10348 [0x286c]

// Reserved address 10352 [0x2870]

// Reserved address 10356 [0x2874]

// Reserved address 10360 [0x2878]

// Reserved address 10364 [0x287c]

// Reserved address 10368 [0x2880]

// Reserved address 10372 [0x2884]

// Reserved address 10376 [0x2888]

// Reserved address 10380 [0x288c]

// Reserved address 10384 [0x2890]

// Reserved address 10388 [0x2894]

// Reserved address 10392 [0x2898]

// Reserved address 10396 [0x289c]

// Reserved address 10400 [0x28a0]

// Reserved address 10404 [0x28a4]

// Reserved address 10408 [0x28a8]

// Reserved address 10412 [0x28ac]

// Reserved address 10416 [0x28b0]

// Reserved address 10420 [0x28b4]

// Reserved address 10424 [0x28b8]

// Reserved address 10428 [0x28bc]

// Reserved address 10432 [0x28c0]

// Reserved address 10436 [0x28c4]

// Reserved address 10440 [0x28c8]

// Reserved address 10444 [0x28cc]

// Reserved address 10448 [0x28d0]

// Reserved address 10452 [0x28d4]

// Reserved address 10456 [0x28d8]

// Reserved address 10460 [0x28dc]

// Reserved address 10464 [0x28e0]

// Reserved address 10468 [0x28e4]

// Reserved address 10472 [0x28e8]

// Reserved address 10476 [0x28ec]

// Reserved address 10480 [0x28f0]

// Reserved address 10484 [0x28f4]

// Reserved address 10488 [0x28f8]

// Reserved address 10492 [0x28fc]

// Reserved address 10496 [0x2900]

// Reserved address 10500 [0x2904]

// Reserved address 10504 [0x2908]

// Reserved address 10508 [0x290c]

// Reserved address 10512 [0x2910]

// Reserved address 10516 [0x2914]

// Reserved address 10520 [0x2918]

// Reserved address 10524 [0x291c]

// Reserved address 10528 [0x2920]

// Reserved address 10532 [0x2924]

// Reserved address 10536 [0x2928]

// Reserved address 10540 [0x292c]

// Reserved address 10544 [0x2930]

// Reserved address 10548 [0x2934]

// Reserved address 10552 [0x2938]

// Reserved address 10556 [0x293c]

// Reserved address 10560 [0x2940]

// Reserved address 10564 [0x2944]

// Reserved address 10568 [0x2948]

// Reserved address 10572 [0x294c]

// Reserved address 10576 [0x2950]

// Reserved address 10580 [0x2954]

// Reserved address 10584 [0x2958]

// Reserved address 10588 [0x295c]

// Reserved address 10592 [0x2960]

// Reserved address 10596 [0x2964]

// Reserved address 10600 [0x2968]

// Reserved address 10604 [0x296c]

// Reserved address 10608 [0x2970]

// Reserved address 10612 [0x2974]

// Reserved address 10616 [0x2978]

// Reserved address 10620 [0x297c]

// Reserved address 10624 [0x2980]

// Reserved address 10628 [0x2984]

// Reserved address 10632 [0x2988]

// Reserved address 10636 [0x298c]

// Reserved address 10640 [0x2990]

// Reserved address 10644 [0x2994]

// Reserved address 10648 [0x2998]

// Reserved address 10652 [0x299c]

// Reserved address 10656 [0x29a0]

// Reserved address 10660 [0x29a4]

// Reserved address 10664 [0x29a8]

// Reserved address 10668 [0x29ac]

// Reserved address 10672 [0x29b0]

// Reserved address 10676 [0x29b4]

// Reserved address 10680 [0x29b8]

// Reserved address 10684 [0x29bc]

// Reserved address 10688 [0x29c0]

// Reserved address 10692 [0x29c4]

// Reserved address 10696 [0x29c8]

// Reserved address 10700 [0x29cc]

// Reserved address 10704 [0x29d0]

// Reserved address 10708 [0x29d4]

// Reserved address 10712 [0x29d8]

// Reserved address 10716 [0x29dc]

// Reserved address 10720 [0x29e0]

// Reserved address 10724 [0x29e4]

// Reserved address 10728 [0x29e8]

// Reserved address 10732 [0x29ec]

// Reserved address 10736 [0x29f0]

// Reserved address 10740 [0x29f4]

// Reserved address 10744 [0x29f8]

// Reserved address 10748 [0x29fc]

// Reserved address 10752 [0x2a00]

// Reserved address 10756 [0x2a04]

// Reserved address 10760 [0x2a08]

// Reserved address 10764 [0x2a0c]

// Reserved address 10768 [0x2a10]

// Reserved address 10772 [0x2a14]

// Reserved address 10776 [0x2a18]

// Reserved address 10780 [0x2a1c]

// Reserved address 10784 [0x2a20]

// Reserved address 10788 [0x2a24]

// Reserved address 10792 [0x2a28]

// Reserved address 10796 [0x2a2c]

// Reserved address 10800 [0x2a30]

// Reserved address 10804 [0x2a34]

// Reserved address 10808 [0x2a38]

// Reserved address 10812 [0x2a3c]

// Reserved address 10816 [0x2a40]

// Reserved address 10820 [0x2a44]

// Reserved address 10824 [0x2a48]

// Reserved address 10828 [0x2a4c]

// Reserved address 10832 [0x2a50]

// Reserved address 10836 [0x2a54]

// Reserved address 10840 [0x2a58]

// Reserved address 10844 [0x2a5c]

// Reserved address 10848 [0x2a60]

// Reserved address 10852 [0x2a64]

// Reserved address 10856 [0x2a68]

// Reserved address 10860 [0x2a6c]

// Reserved address 10864 [0x2a70]

// Reserved address 10868 [0x2a74]

// Reserved address 10872 [0x2a78]

// Reserved address 10876 [0x2a7c]

// Reserved address 10880 [0x2a80]

// Reserved address 10884 [0x2a84]

// Reserved address 10888 [0x2a88]

// Reserved address 10892 [0x2a8c]

// Reserved address 10896 [0x2a90]

// Reserved address 10900 [0x2a94]

// Reserved address 10904 [0x2a98]

// Reserved address 10908 [0x2a9c]

// Reserved address 10912 [0x2aa0]

// Reserved address 10916 [0x2aa4]

// Reserved address 10920 [0x2aa8]

// Reserved address 10924 [0x2aac]

// Reserved address 10928 [0x2ab0]

// Reserved address 10932 [0x2ab4]

// Reserved address 10936 [0x2ab8]

// Reserved address 10940 [0x2abc]

// Reserved address 10944 [0x2ac0]

// Reserved address 10948 [0x2ac4]

// Reserved address 10952 [0x2ac8]

// Reserved address 10956 [0x2acc]

// Reserved address 10960 [0x2ad0]

// Reserved address 10964 [0x2ad4]

// Reserved address 10968 [0x2ad8]

// Reserved address 10972 [0x2adc]

// Reserved address 10976 [0x2ae0]

// Reserved address 10980 [0x2ae4]

// Reserved address 10984 [0x2ae8]

// Reserved address 10988 [0x2aec]

// Reserved address 10992 [0x2af0]

// Reserved address 10996 [0x2af4]

// Reserved address 11000 [0x2af8]

// Reserved address 11004 [0x2afc]

// Reserved address 11008 [0x2b00]

// Reserved address 11012 [0x2b04]

// Reserved address 11016 [0x2b08]

// Reserved address 11020 [0x2b0c]

// Reserved address 11024 [0x2b10]

// Reserved address 11028 [0x2b14]

// Reserved address 11032 [0x2b18]

// Reserved address 11036 [0x2b1c]

// Reserved address 11040 [0x2b20]

// Reserved address 11044 [0x2b24]

// Reserved address 11048 [0x2b28]

// Reserved address 11052 [0x2b2c]

// Reserved address 11056 [0x2b30]

// Reserved address 11060 [0x2b34]

// Reserved address 11064 [0x2b38]

// Reserved address 11068 [0x2b3c]

// Reserved address 11072 [0x2b40]

// Reserved address 11076 [0x2b44]

// Reserved address 11080 [0x2b48]

// Reserved address 11084 [0x2b4c]

// Reserved address 11088 [0x2b50]

// Reserved address 11092 [0x2b54]

// Reserved address 11096 [0x2b58]

// Reserved address 11100 [0x2b5c]

// Reserved address 11104 [0x2b60]

// Reserved address 11108 [0x2b64]

// Reserved address 11112 [0x2b68]

// Reserved address 11116 [0x2b6c]

// Reserved address 11120 [0x2b70]

// Reserved address 11124 [0x2b74]

// Reserved address 11128 [0x2b78]

// Reserved address 11132 [0x2b7c]

// Reserved address 11136 [0x2b80]

// Reserved address 11140 [0x2b84]

// Reserved address 11144 [0x2b88]

// Reserved address 11148 [0x2b8c]

// Reserved address 11152 [0x2b90]

// Reserved address 11156 [0x2b94]

// Reserved address 11160 [0x2b98]

// Reserved address 11164 [0x2b9c]

// Reserved address 11168 [0x2ba0]

// Reserved address 11172 [0x2ba4]

// Reserved address 11176 [0x2ba8]

// Reserved address 11180 [0x2bac]

// Reserved address 11184 [0x2bb0]

// Reserved address 11188 [0x2bb4]

// Reserved address 11192 [0x2bb8]

// Reserved address 11196 [0x2bbc]

// Reserved address 11200 [0x2bc0]

// Reserved address 11204 [0x2bc4]

// Reserved address 11208 [0x2bc8]

// Reserved address 11212 [0x2bcc]

// Reserved address 11216 [0x2bd0]

// Reserved address 11220 [0x2bd4]

// Reserved address 11224 [0x2bd8]

// Reserved address 11228 [0x2bdc]

// Reserved address 11232 [0x2be0]

// Reserved address 11236 [0x2be4]

// Reserved address 11240 [0x2be8]

// Reserved address 11244 [0x2bec]

// Reserved address 11248 [0x2bf0]

// Reserved address 11252 [0x2bf4]

// Reserved address 11256 [0x2bf8]

// Reserved address 11260 [0x2bfc]

// Reserved address 11264 [0x2c00]

// Reserved address 11268 [0x2c04]

// Reserved address 11272 [0x2c08]

// Reserved address 11276 [0x2c0c]

// Reserved address 11280 [0x2c10]

// Reserved address 11284 [0x2c14]

// Reserved address 11288 [0x2c18]

// Reserved address 11292 [0x2c1c]

// Reserved address 11296 [0x2c20]

// Reserved address 11300 [0x2c24]

// Reserved address 11304 [0x2c28]

// Reserved address 11308 [0x2c2c]

// Reserved address 11312 [0x2c30]

// Reserved address 11316 [0x2c34]

// Reserved address 11320 [0x2c38]

// Reserved address 11324 [0x2c3c]

// Reserved address 11328 [0x2c40]

// Reserved address 11332 [0x2c44]

// Reserved address 11336 [0x2c48]

// Reserved address 11340 [0x2c4c]

// Reserved address 11344 [0x2c50]

// Reserved address 11348 [0x2c54]

// Reserved address 11352 [0x2c58]

// Reserved address 11356 [0x2c5c]

// Reserved address 11360 [0x2c60]

// Reserved address 11364 [0x2c64]

// Reserved address 11368 [0x2c68]

// Reserved address 11372 [0x2c6c]

// Reserved address 11376 [0x2c70]

// Reserved address 11380 [0x2c74]

// Reserved address 11384 [0x2c78]

// Reserved address 11388 [0x2c7c]

// Reserved address 11392 [0x2c80]

// Reserved address 11396 [0x2c84]

// Reserved address 11400 [0x2c88]

// Reserved address 11404 [0x2c8c]

// Reserved address 11408 [0x2c90]

// Reserved address 11412 [0x2c94]

// Reserved address 11416 [0x2c98]

// Reserved address 11420 [0x2c9c]

// Reserved address 11424 [0x2ca0]

// Reserved address 11428 [0x2ca4]

// Reserved address 11432 [0x2ca8]

// Reserved address 11436 [0x2cac]

// Reserved address 11440 [0x2cb0]

// Reserved address 11444 [0x2cb4]

// Reserved address 11448 [0x2cb8]

// Reserved address 11452 [0x2cbc]

// Reserved address 11456 [0x2cc0]

// Reserved address 11460 [0x2cc4]

// Reserved address 11464 [0x2cc8]

// Reserved address 11468 [0x2ccc]

// Reserved address 11472 [0x2cd0]

// Reserved address 11476 [0x2cd4]

// Reserved address 11480 [0x2cd8]

// Reserved address 11484 [0x2cdc]

// Reserved address 11488 [0x2ce0]

// Reserved address 11492 [0x2ce4]

// Reserved address 11496 [0x2ce8]

// Reserved address 11500 [0x2cec]

// Reserved address 11504 [0x2cf0]

// Reserved address 11508 [0x2cf4]

// Reserved address 11512 [0x2cf8]

// Reserved address 11516 [0x2cfc]

// Reserved address 11520 [0x2d00]

// Reserved address 11524 [0x2d04]

// Reserved address 11528 [0x2d08]

// Reserved address 11532 [0x2d0c]

// Reserved address 11536 [0x2d10]

// Reserved address 11540 [0x2d14]

// Reserved address 11544 [0x2d18]

// Reserved address 11548 [0x2d1c]

// Reserved address 11552 [0x2d20]

// Reserved address 11556 [0x2d24]

// Reserved address 11560 [0x2d28]

// Reserved address 11564 [0x2d2c]

// Reserved address 11568 [0x2d30]

// Reserved address 11572 [0x2d34]

// Reserved address 11576 [0x2d38]

// Reserved address 11580 [0x2d3c]

// Reserved address 11584 [0x2d40]

// Reserved address 11588 [0x2d44]

// Reserved address 11592 [0x2d48]

// Reserved address 11596 [0x2d4c]

// Reserved address 11600 [0x2d50]

// Reserved address 11604 [0x2d54]

// Reserved address 11608 [0x2d58]

// Reserved address 11612 [0x2d5c]

// Reserved address 11616 [0x2d60]

// Reserved address 11620 [0x2d64]

// Reserved address 11624 [0x2d68]

// Reserved address 11628 [0x2d6c]

// Reserved address 11632 [0x2d70]

// Reserved address 11636 [0x2d74]

// Reserved address 11640 [0x2d78]

// Reserved address 11644 [0x2d7c]

// Reserved address 11648 [0x2d80]

// Reserved address 11652 [0x2d84]

// Reserved address 11656 [0x2d88]

// Reserved address 11660 [0x2d8c]

// Reserved address 11664 [0x2d90]

// Reserved address 11668 [0x2d94]

// Reserved address 11672 [0x2d98]

// Reserved address 11676 [0x2d9c]

// Reserved address 11680 [0x2da0]

// Reserved address 11684 [0x2da4]

// Reserved address 11688 [0x2da8]

// Reserved address 11692 [0x2dac]

// Reserved address 11696 [0x2db0]

// Reserved address 11700 [0x2db4]

// Reserved address 11704 [0x2db8]

// Reserved address 11708 [0x2dbc]

// Reserved address 11712 [0x2dc0]

// Reserved address 11716 [0x2dc4]

// Reserved address 11720 [0x2dc8]

// Reserved address 11724 [0x2dcc]

// Reserved address 11728 [0x2dd0]

// Reserved address 11732 [0x2dd4]

// Reserved address 11736 [0x2dd8]

// Reserved address 11740 [0x2ddc]

// Reserved address 11744 [0x2de0]

// Reserved address 11748 [0x2de4]

// Reserved address 11752 [0x2de8]

// Reserved address 11756 [0x2dec]

// Reserved address 11760 [0x2df0]

// Reserved address 11764 [0x2df4]

// Reserved address 11768 [0x2df8]

// Reserved address 11772 [0x2dfc]

// Reserved address 11776 [0x2e00]

// Reserved address 11780 [0x2e04]

// Reserved address 11784 [0x2e08]

// Reserved address 11788 [0x2e0c]

// Reserved address 11792 [0x2e10]

// Reserved address 11796 [0x2e14]

// Reserved address 11800 [0x2e18]

// Reserved address 11804 [0x2e1c]

// Reserved address 11808 [0x2e20]

// Reserved address 11812 [0x2e24]

// Reserved address 11816 [0x2e28]

// Reserved address 11820 [0x2e2c]

// Reserved address 11824 [0x2e30]

// Reserved address 11828 [0x2e34]

// Reserved address 11832 [0x2e38]

// Reserved address 11836 [0x2e3c]

// Reserved address 11840 [0x2e40]

// Reserved address 11844 [0x2e44]

// Reserved address 11848 [0x2e48]

// Reserved address 11852 [0x2e4c]

// Reserved address 11856 [0x2e50]

// Reserved address 11860 [0x2e54]

// Reserved address 11864 [0x2e58]

// Reserved address 11868 [0x2e5c]

// Reserved address 11872 [0x2e60]

// Reserved address 11876 [0x2e64]

// Reserved address 11880 [0x2e68]

// Reserved address 11884 [0x2e6c]

// Reserved address 11888 [0x2e70]

// Reserved address 11892 [0x2e74]

// Reserved address 11896 [0x2e78]

// Reserved address 11900 [0x2e7c]

// Reserved address 11904 [0x2e80]

// Reserved address 11908 [0x2e84]

// Reserved address 11912 [0x2e88]

// Reserved address 11916 [0x2e8c]

// Reserved address 11920 [0x2e90]

// Reserved address 11924 [0x2e94]

// Reserved address 11928 [0x2e98]

// Reserved address 11932 [0x2e9c]

// Reserved address 11936 [0x2ea0]

// Reserved address 11940 [0x2ea4]

// Reserved address 11944 [0x2ea8]

// Reserved address 11948 [0x2eac]

// Reserved address 11952 [0x2eb0]

// Reserved address 11956 [0x2eb4]

// Reserved address 11960 [0x2eb8]

// Reserved address 11964 [0x2ebc]

// Reserved address 11968 [0x2ec0]

// Reserved address 11972 [0x2ec4]

// Reserved address 11976 [0x2ec8]

// Reserved address 11980 [0x2ecc]

// Reserved address 11984 [0x2ed0]

// Reserved address 11988 [0x2ed4]

// Reserved address 11992 [0x2ed8]

// Reserved address 11996 [0x2edc]

// Reserved address 12000 [0x2ee0]

// Reserved address 12004 [0x2ee4]

// Reserved address 12008 [0x2ee8]

// Reserved address 12012 [0x2eec]

// Reserved address 12016 [0x2ef0]

// Reserved address 12020 [0x2ef4]

// Reserved address 12024 [0x2ef8]

// Reserved address 12028 [0x2efc]

// Reserved address 12032 [0x2f00]

// Reserved address 12036 [0x2f04]

// Reserved address 12040 [0x2f08]

// Reserved address 12044 [0x2f0c]

// Reserved address 12048 [0x2f10]

// Reserved address 12052 [0x2f14]

// Reserved address 12056 [0x2f18]

// Reserved address 12060 [0x2f1c]

// Reserved address 12064 [0x2f20]

// Reserved address 12068 [0x2f24]

// Reserved address 12072 [0x2f28]

// Reserved address 12076 [0x2f2c]

// Reserved address 12080 [0x2f30]

// Reserved address 12084 [0x2f34]

// Reserved address 12088 [0x2f38]

// Reserved address 12092 [0x2f3c]

// Reserved address 12096 [0x2f40]

// Reserved address 12100 [0x2f44]

// Reserved address 12104 [0x2f48]

// Reserved address 12108 [0x2f4c]

// Reserved address 12112 [0x2f50]

// Reserved address 12116 [0x2f54]

// Reserved address 12120 [0x2f58]

// Reserved address 12124 [0x2f5c]

// Reserved address 12128 [0x2f60]

// Reserved address 12132 [0x2f64]

// Reserved address 12136 [0x2f68]

// Reserved address 12140 [0x2f6c]

// Reserved address 12144 [0x2f70]

// Reserved address 12148 [0x2f74]

// Reserved address 12152 [0x2f78]

// Reserved address 12156 [0x2f7c]

// Reserved address 12160 [0x2f80]

// Reserved address 12164 [0x2f84]

// Reserved address 12168 [0x2f88]

// Reserved address 12172 [0x2f8c]

// Reserved address 12176 [0x2f90]

// Reserved address 12180 [0x2f94]

// Reserved address 12184 [0x2f98]

// Reserved address 12188 [0x2f9c]

// Reserved address 12192 [0x2fa0]

// Reserved address 12196 [0x2fa4]

// Reserved address 12200 [0x2fa8]

// Reserved address 12204 [0x2fac]

// Reserved address 12208 [0x2fb0]

// Reserved address 12212 [0x2fb4]

// Reserved address 12216 [0x2fb8]

// Reserved address 12220 [0x2fbc]

// Reserved address 12224 [0x2fc0]

// Reserved address 12228 [0x2fc4]

// Reserved address 12232 [0x2fc8]

// Reserved address 12236 [0x2fcc]

// Reserved address 12240 [0x2fd0]

// Reserved address 12244 [0x2fd4]

// Reserved address 12248 [0x2fd8]

// Reserved address 12252 [0x2fdc]

// Reserved address 12256 [0x2fe0]

// Reserved address 12260 [0x2fe4]

// Reserved address 12264 [0x2fe8]

// Reserved address 12268 [0x2fec]

// Reserved address 12272 [0x2ff0]

// Reserved address 12276 [0x2ff4]

// Reserved address 12280 [0x2ff8]

// Reserved address 12284 [0x2ffc]

// Register EIC_PROC_IF_GICC_DIR_0
#define EIC_PROC_IF_GICC_DIR_0                  _MK_ADDR_CONST(0x3000)
#define EIC_PROC_IF_GICC_DIR_0_SECURE                   0x0
#define EIC_PROC_IF_GICC_DIR_0_WORD_COUNT                       0x1
#define EIC_PROC_IF_GICC_DIR_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_DIR_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_DIR_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_DIR_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_DIR_0_READ_MASK                        _MK_MASK_CONST(0x1fff)
#define EIC_PROC_IF_GICC_DIR_0_WRITE_MASK                       _MK_MASK_CONST(0x1fff)
#define EIC_PROC_IF_GICC_DIR_0_CPUID_SHIFT                      _MK_SHIFT_CONST(10)
#define EIC_PROC_IF_GICC_DIR_0_CPUID_FIELD                      _MK_FIELD_CONST(0x7, EIC_PROC_IF_GICC_DIR_0_CPUID_SHIFT)
#define EIC_PROC_IF_GICC_DIR_0_CPUID_RANGE                      12:10
#define EIC_PROC_IF_GICC_DIR_0_CPUID_WOFFSET                    0x0
#define EIC_PROC_IF_GICC_DIR_0_CPUID_DEFAULT                    _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_DIR_0_CPUID_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_DIR_0_CPUID_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_DIR_0_CPUID_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

#define EIC_PROC_IF_GICC_DIR_0_InterruptID_SHIFT                        _MK_SHIFT_CONST(0)
#define EIC_PROC_IF_GICC_DIR_0_InterruptID_FIELD                        _MK_FIELD_CONST(0x3ff, EIC_PROC_IF_GICC_DIR_0_InterruptID_SHIFT)
#define EIC_PROC_IF_GICC_DIR_0_InterruptID_RANGE                        9:0
#define EIC_PROC_IF_GICC_DIR_0_InterruptID_WOFFSET                      0x0
#define EIC_PROC_IF_GICC_DIR_0_InterruptID_DEFAULT                      _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_DIR_0_InterruptID_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_DIR_0_InterruptID_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define EIC_PROC_IF_GICC_DIR_0_InterruptID_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


//
// REGISTER LIST
//
#define LIST_AREIC_PROC_IF_REGS(_op_) \
_op_(EIC_PROC_IF_GICC_CTLR_0) \
_op_(EIC_PROC_IF_GICC_PMR_0) \
_op_(EIC_PROC_IF_GICC_BPR_0) \
_op_(EIC_PROC_IF_GICC_IAR_0) \
_op_(EIC_PROC_IF_GICC_EOIR_0) \
_op_(EIC_PROC_IF_GICC_RPR_0) \
_op_(EIC_PROC_IF_GICC_HPPIR_0) \
_op_(EIC_PROC_IF_GICC_ABPR_0) \
_op_(EIC_PROC_IF_GICC_AIAR_0) \
_op_(EIC_PROC_IF_GICC_AEOIR_0) \
_op_(EIC_PROC_IF_GICC_AHPPIR_0) \
_op_(EIC_PROC_IF_GICC_APR0_0) \
_op_(EIC_PROC_IF_GICC_APR1_0) \
_op_(EIC_PROC_IF_GICC_APR2_0) \
_op_(EIC_PROC_IF_GICC_APR3_0) \
_op_(EIC_PROC_IF_GICC_NSAPR0_0) \
_op_(EIC_PROC_IF_GICC_NSAPR1_0) \
_op_(EIC_PROC_IF_GICC_NSAPR2_0) \
_op_(EIC_PROC_IF_GICC_NSAPR3_0) \
_op_(EIC_PROC_IF_GICC_IIDR_0) \
_op_(EIC_PROC_IF_GICC_DIR_0)


//
// ADDRESS SPACES
//

#define BASE_ADDRESS_EIC_PROC_IF        0x00002000

//
// AREIC_PROC_IF REGISTER BANKS
//

#define EIC_PROC_IF0_FIRST_REG 0x2000 // EIC_PROC_IF_GICC_CTLR_0
#define EIC_PROC_IF0_LAST_REG 0x2028 // EIC_PROC_IF_GICC_AHPPIR_0
#define EIC_PROC_IF1_FIRST_REG 0x20d0 // EIC_PROC_IF_GICC_APR0_0
#define EIC_PROC_IF1_LAST_REG 0x20ec // EIC_PROC_IF_GICC_NSAPR3_0
#define EIC_PROC_IF2_FIRST_REG 0x20fc // EIC_PROC_IF_GICC_IIDR_0
#define EIC_PROC_IF2_LAST_REG 0x20fc // EIC_PROC_IF_GICC_IIDR_0
#define EIC_PROC_IF3_FIRST_REG 0x3000 // EIC_PROC_IF_GICC_DIR_0
#define EIC_PROC_IF3_LAST_REG 0x3000 // EIC_PROC_IF_GICC_DIR_0

// To satisfy various compilers and platforms,
// we let users control the types and syntax of certain constants, using macros.
#ifndef _MK_SHIFT_CONST
  #define _MK_SHIFT_CONST(_constant_) _constant_
#endif
#ifndef _MK_MASK_CONST
  #define _MK_MASK_CONST(_constant_) _constant_
#endif
#ifndef _MK_ENUM_CONST
  #define _MK_ENUM_CONST(_constant_) (_constant_ ## UL)
#endif
#ifndef _MK_ADDR_CONST
  #define _MK_ADDR_CONST(_constant_) _constant_
#endif
#ifndef _MK_FIELD_CONST
  #define _MK_FIELD_CONST(_mask_, _shift_) (_MK_MASK_CONST(_mask_) << _MK_SHIFT_CONST(_shift_))
#endif

#endif // ifndef ___AREIC_PROC_IF_H_INC_
