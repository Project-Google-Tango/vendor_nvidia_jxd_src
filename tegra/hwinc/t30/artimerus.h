//
// Copyright (c) 2011 NVIDIA Corporation. 
// All rights reserved. 
// 
// Redistribution and use in source and binary forms, with or without 
// modification, are permitted provided that the following conditions are met: 
// 
// Redistributions of source code must retain the above copyright notice, 
// this list of conditions and the following disclaimer. 
// 
// Redistributions in binary form must reproduce the above copyright notice, 
// this list of conditions and the following disclaimer in the documentation 
// and/or other materials provided with the distribution. 
// 
// Neither the name of the NVIDIA Corporation nor the names of its contributors 
// may be used to endorse or promote products derived from this software 
// without specific prior written permission. 
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE 
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
// POSSIBILITY OF SUCH DAMAGE. 
//

//
// DO NOT EDIT - generated by simspec!
//

#ifndef ___ARTIMERUS_H_INC_
#define ___ARTIMERUS_H_INC_

// Register TIMERUS_CNTR_1US_0  
#define TIMERUS_CNTR_1US_0                      _MK_ADDR_CONST(0x0)
#define TIMERUS_CNTR_1US_0_SECURE                       0x0
#define TIMERUS_CNTR_1US_0_WORD_COUNT                   0x1
#define TIMERUS_CNTR_1US_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_1US_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_1US_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_1US_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_1US_0_READ_MASK                    _MK_MASK_CONST(0xffffffff)
#define TIMERUS_CNTR_1US_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_1US_0_HIGH_VALUE_SHIFT                     _MK_SHIFT_CONST(16)
#define TIMERUS_CNTR_1US_0_HIGH_VALUE_FIELD                     _MK_FIELD_CONST(0xffff, TIMERUS_CNTR_1US_0_HIGH_VALUE_SHIFT)
#define TIMERUS_CNTR_1US_0_HIGH_VALUE_RANGE                     31:16
#define TIMERUS_CNTR_1US_0_HIGH_VALUE_WOFFSET                   0x0
#define TIMERUS_CNTR_1US_0_HIGH_VALUE_DEFAULT                   _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_1US_0_HIGH_VALUE_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_1US_0_HIGH_VALUE_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_1US_0_HIGH_VALUE_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

#define TIMERUS_CNTR_1US_0_LOW_VALUE_SHIFT                      _MK_SHIFT_CONST(0)
#define TIMERUS_CNTR_1US_0_LOW_VALUE_FIELD                      _MK_FIELD_CONST(0xffff, TIMERUS_CNTR_1US_0_LOW_VALUE_SHIFT)
#define TIMERUS_CNTR_1US_0_LOW_VALUE_RANGE                      15:0
#define TIMERUS_CNTR_1US_0_LOW_VALUE_WOFFSET                    0x0
#define TIMERUS_CNTR_1US_0_LOW_VALUE_DEFAULT                    _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_1US_0_LOW_VALUE_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_1US_0_LOW_VALUE_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_1US_0_LOW_VALUE_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register TIMERUS_USEC_CFG_0  
#define TIMERUS_USEC_CFG_0                      _MK_ADDR_CONST(0x4)
#define TIMERUS_USEC_CFG_0_SECURE                       0x0
#define TIMERUS_USEC_CFG_0_WORD_COUNT                   0x1
#define TIMERUS_USEC_CFG_0_RESET_VAL                    _MK_MASK_CONST(0xc)
#define TIMERUS_USEC_CFG_0_RESET_MASK                   _MK_MASK_CONST(0xffff)
#define TIMERUS_USEC_CFG_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define TIMERUS_USEC_CFG_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define TIMERUS_USEC_CFG_0_READ_MASK                    _MK_MASK_CONST(0xffff)
#define TIMERUS_USEC_CFG_0_WRITE_MASK                   _MK_MASK_CONST(0xffff)
#define TIMERUS_USEC_CFG_0_USEC_DIVIDEND_SHIFT                  _MK_SHIFT_CONST(8)
#define TIMERUS_USEC_CFG_0_USEC_DIVIDEND_FIELD                  _MK_FIELD_CONST(0xff, TIMERUS_USEC_CFG_0_USEC_DIVIDEND_SHIFT)
#define TIMERUS_USEC_CFG_0_USEC_DIVIDEND_RANGE                  15:8
#define TIMERUS_USEC_CFG_0_USEC_DIVIDEND_WOFFSET                        0x0
#define TIMERUS_USEC_CFG_0_USEC_DIVIDEND_DEFAULT                        _MK_MASK_CONST(0x0)
#define TIMERUS_USEC_CFG_0_USEC_DIVIDEND_DEFAULT_MASK                   _MK_MASK_CONST(0xff)
#define TIMERUS_USEC_CFG_0_USEC_DIVIDEND_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define TIMERUS_USEC_CFG_0_USEC_DIVIDEND_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

#define TIMERUS_USEC_CFG_0_USEC_DIVISOR_SHIFT                   _MK_SHIFT_CONST(0)
#define TIMERUS_USEC_CFG_0_USEC_DIVISOR_FIELD                   _MK_FIELD_CONST(0xff, TIMERUS_USEC_CFG_0_USEC_DIVISOR_SHIFT)
#define TIMERUS_USEC_CFG_0_USEC_DIVISOR_RANGE                   7:0
#define TIMERUS_USEC_CFG_0_USEC_DIVISOR_WOFFSET                 0x0
#define TIMERUS_USEC_CFG_0_USEC_DIVISOR_DEFAULT                 _MK_MASK_CONST(0xc)
#define TIMERUS_USEC_CFG_0_USEC_DIVISOR_DEFAULT_MASK                    _MK_MASK_CONST(0xff)
#define TIMERUS_USEC_CFG_0_USEC_DIVISOR_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define TIMERUS_USEC_CFG_0_USEC_DIVISOR_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Reserved address 8 [0x8] 

// Reserved address 12 [0xc] 

// Reserved address 16 [0x10] 

// Reserved address 20 [0x14] 

// Reserved address 24 [0x18] 

// Reserved address 28 [0x1c] 

// Reserved address 32 [0x20] 

// Reserved address 36 [0x24] 

// Reserved address 40 [0x28] 

// Reserved address 44 [0x2c] 

// Reserved address 48 [0x30] 

// Reserved address 52 [0x34] 

// Reserved address 56 [0x38] 

// Register TIMERUS_CNTR_FREEZE_0  
#define TIMERUS_CNTR_FREEZE_0                   _MK_ADDR_CONST(0x3c)
#define TIMERUS_CNTR_FREEZE_0_SECURE                    0x0
#define TIMERUS_CNTR_FREEZE_0_WORD_COUNT                        0x1
#define TIMERUS_CNTR_FREEZE_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_FREEZE_0_RESET_MASK                        _MK_MASK_CONST(0x1f)
#define TIMERUS_CNTR_FREEZE_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_FREEZE_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_FREEZE_0_READ_MASK                         _MK_MASK_CONST(0x1f)
#define TIMERUS_CNTR_FREEZE_0_WRITE_MASK                        _MK_MASK_CONST(0x1f)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_COP_SHIFT                      _MK_SHIFT_CONST(4)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_COP_FIELD                      _MK_FIELD_CONST(0x1, TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_COP_SHIFT)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_COP_RANGE                      4:4
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_COP_WOFFSET                    0x0
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_COP_DEFAULT                    _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_COP_DEFAULT_MASK                       _MK_MASK_CONST(0x1)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_COP_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_COP_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU3_SHIFT                     _MK_SHIFT_CONST(3)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU3_FIELD                     _MK_FIELD_CONST(0x1, TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU3_SHIFT)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU3_RANGE                     3:3
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU3_WOFFSET                   0x0
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU3_DEFAULT                   _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU3_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU3_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU3_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU2_SHIFT                     _MK_SHIFT_CONST(2)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU2_FIELD                     _MK_FIELD_CONST(0x1, TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU2_SHIFT)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU2_RANGE                     2:2
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU2_WOFFSET                   0x0
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU2_DEFAULT                   _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU2_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU2_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU2_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU1_SHIFT                     _MK_SHIFT_CONST(1)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU1_FIELD                     _MK_FIELD_CONST(0x1, TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU1_SHIFT)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU1_RANGE                     1:1
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU1_WOFFSET                   0x0
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU1_DEFAULT                   _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU1_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU1_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU1_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU0_SHIFT                     _MK_SHIFT_CONST(0)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU0_FIELD                     _MK_FIELD_CONST(0x1, TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU0_SHIFT)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU0_RANGE                     0:0
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU0_WOFFSET                   0x0
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU0_DEFAULT                   _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU0_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU0_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define TIMERUS_CNTR_FREEZE_0_DBG_FREEZE_CPU0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


//
// REGISTER LIST
//
#define LIST_ARTIMERUS_REGS(_op_) \
_op_(TIMERUS_CNTR_1US_0) \
_op_(TIMERUS_USEC_CFG_0) \
_op_(TIMERUS_CNTR_FREEZE_0)


//
// ADDRESS SPACES
//

#define BASE_ADDRESS_TIMERUS    0x00000000

//
// ARTIMERUS REGISTER BANKS
//

#define TIMERUS0_FIRST_REG 0x0000 // TIMERUS_CNTR_1US_0
#define TIMERUS0_LAST_REG 0x0004 // TIMERUS_USEC_CFG_0
#define TIMERUS1_FIRST_REG 0x003c // TIMERUS_CNTR_FREEZE_0
#define TIMERUS1_LAST_REG 0x003c // TIMERUS_CNTR_FREEZE_0

// To satisfy various compilers and platforms,
// we let users control the types and syntax of certain constants, using macros.
#ifndef _MK_SHIFT_CONST
  #define _MK_SHIFT_CONST(_constant_) _constant_
#endif
#ifndef _MK_MASK_CONST
  #define _MK_MASK_CONST(_constant_) _constant_
#endif
#ifndef _MK_ENUM_CONST
  #define _MK_ENUM_CONST(_constant_) (_constant_ ## UL)
#endif
#ifndef _MK_ADDR_CONST
  #define _MK_ADDR_CONST(_constant_) _constant_
#endif
#ifndef _MK_FIELD_CONST
  #define _MK_FIELD_CONST(_mask_, _shift_) (_MK_MASK_CONST(_mask_) << _MK_SHIFT_CONST(_shift_))
#endif

#endif // ifndef ___ARTIMERUS_H_INC_
