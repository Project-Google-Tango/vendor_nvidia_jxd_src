/*
 * Copyright (c) 2012, NVIDIA CORPORATION.  All rights reserved.
 *
 * NVIDIA CORPORATION and its licensors retain all intellectual property
 * and proprietary rights in and to this software, related documentation
 * and any modifications thereto.  Any use, reproduction, disclosure or
 * distribution of this software and related documentation without an express
 * license agreement from NVIDIA CORPORATION is strictly prohibited
 */

//
// DO NOT EDIT - generated by simspec!
//

#ifndef ___ARHOST1X_H_INC_
#define ___ARHOST1X_H_INC_

#ifdef __cplusplus
extern "C"
{
#endif

#define NV_HOST1X_MAPPING_CHANNEL_BASE  0
#define NV_HOST1X_CHANNEL_MAP_SIZE_BITS 14
#define NV_HOST1X_CHANNEL_MAP_SIZE_BYTES        16384
#define NV_HOST1X_DMA_GCNT_VEC  14
#define NV_HOST1X_CHANNELID_PROT        8
#define NV_HOST1X_CHANNELID_INVALID     15
#define NV_HOST1X_CHANNEL0_BASE 0
#define NV_HOST1X_CHANNEL1_BASE 16384
#define NV_HOST1X_CHANNEL2_BASE 32768
#define NV_HOST1X_CHANNEL3_BASE 49152
#define NV_HOST1X_CHANNEL4_BASE 65536
#define NV_HOST1X_CHANNEL5_BASE 81920
#define NV_HOST1X_CHANNEL6_BASE 98304
#define NV_HOST1X_CHANNEL7_BASE 114688
#define NV_HOST1X_CHANNEL_PROT_BASE     131072
#define HOST1X_CHANNEL_BASE     0
#define HOST1X_CHANNEL_FIFO_PIO_BASE    2048
#define HOST1X_CHANNEL_FIFO_PIO_LIMIT   4095
#define HOST1X_CHANNEL_FBBUF_REGION_BASE        4096
#define HOST1X_CHANNEL_FBBUF_REGION_LIMIT       8191
#define HOST1X_CHANNEL_SYNC_REG_BASE    12288
#define HOST1X_CHANNEL_SYNC_REG_LIMIT   16383
#define HOST1X_READ_DMA_OUTPUT_REGION_SIZE      128
#define HOST1X_READ_DMA_OUTPUT_0_BASE   1536
#define HOST1X_READ_DMA_OUTPUT_0_LIMIT  1663
#define HOST1X_READ_DMA_OUTPUT_1_BASE   1664
#define HOST1X_READ_DMA_OUTPUT_1_LIMIT  1791
#define HOST1X_READ_DMA_OUTPUT_2_BASE   1792
#define HOST1X_READ_DMA_OUTPUT_2_LIMIT  1919
#define HOST1X_READ_DMA_OUTPUT_3_BASE   1920
#define HOST1X_READ_DMA_OUTPUT_3_LIMIT  2047
#define HOST1X_MAX_NUM_MODULES  256
#define HOST1X_MODULE_APERTURE_SIZE     262144
#define HOST1X_DIRECT_MODULE_MAX_SIZE   67108864
#define NV_HOST1X_CPU_READ_RETURN_TAG   15

// Packet DIRECT_REG_ADDR
#define DIRECT_REG_ADDR_SIZE 30

#define DIRECT_REG_ADDR_BAR_SHIFT                       _MK_SHIFT_CONST(26)
#define DIRECT_REG_ADDR_BAR_FIELD                       _MK_FIELD_CONST(0x3f, DIRECT_REG_ADDR_BAR_SHIFT)
#define DIRECT_REG_ADDR_BAR_RANGE                       _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(26)
#define DIRECT_REG_ADDR_BAR_ROW                 0

#define DIRECT_REG_ADDR_MODULE_ID_SHIFT                 _MK_SHIFT_CONST(18)
#define DIRECT_REG_ADDR_MODULE_ID_FIELD                 _MK_FIELD_CONST(0xff, DIRECT_REG_ADDR_MODULE_ID_SHIFT)
#define DIRECT_REG_ADDR_MODULE_ID_RANGE                 _MK_SHIFT_CONST(25):_MK_SHIFT_CONST(18)
#define DIRECT_REG_ADDR_MODULE_ID_ROW                   0

#define DIRECT_REG_ADDR_REG_OFFSET_SHIFT                        _MK_SHIFT_CONST(2)
#define DIRECT_REG_ADDR_REG_OFFSET_FIELD                        _MK_FIELD_CONST(0xffff, DIRECT_REG_ADDR_REG_OFFSET_SHIFT)
#define DIRECT_REG_ADDR_REG_OFFSET_RANGE                        _MK_SHIFT_CONST(17):_MK_SHIFT_CONST(2)
#define DIRECT_REG_ADDR_REG_OFFSET_ROW                  0


// Packet HCFCMD
#define HCFCMD_SIZE 32

#define HCFCMD_OPCODE_SHIFT                     _MK_SHIFT_CONST(28)
#define HCFCMD_OPCODE_FIELD                     _MK_FIELD_CONST(0xf, HCFCMD_OPCODE_SHIFT)
#define HCFCMD_OPCODE_RANGE                     _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(28)
#define HCFCMD_OPCODE_ROW                       0
#define HCFCMD_OPCODE_SETCL                     _MK_ENUM_CONST(0)
#define HCFCMD_OPCODE_INCR                      _MK_ENUM_CONST(1)
#define HCFCMD_OPCODE_NONINCR                   _MK_ENUM_CONST(2)
#define HCFCMD_OPCODE_MASK                      _MK_ENUM_CONST(3)
#define HCFCMD_OPCODE_IMM                       _MK_ENUM_CONST(4)
#define HCFCMD_OPCODE_RESTART                   _MK_ENUM_CONST(5)
#define HCFCMD_OPCODE_GATHER                    _MK_ENUM_CONST(6)
#define HCFCMD_OPCODE_EXTEND                    _MK_ENUM_CONST(14)
#define HCFCMD_OPCODE_CHDONE                    _MK_ENUM_CONST(15)

#define HCFCMD_DATA_SHIFT                       _MK_SHIFT_CONST(0)
#define HCFCMD_DATA_FIELD                       _MK_FIELD_CONST(0xfffffff, HCFCMD_DATA_SHIFT)
#define HCFCMD_DATA_RANGE                       _MK_SHIFT_CONST(27):_MK_SHIFT_CONST(0)
#define HCFCMD_DATA_ROW                 0


// Packet HCFSETCL
#define HCFSETCL_SIZE 32

#define HCFSETCL_OPCODE_SHIFT                   _MK_SHIFT_CONST(28)
#define HCFSETCL_OPCODE_FIELD                   _MK_FIELD_CONST(0xf, HCFSETCL_OPCODE_SHIFT)
#define HCFSETCL_OPCODE_RANGE                   _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(28)
#define HCFSETCL_OPCODE_ROW                     0
#define HCFSETCL_OPCODE_SETCL                   _MK_ENUM_CONST(0)

#define HCFSETCL_OFFSET_SHIFT                   _MK_SHIFT_CONST(16)
#define HCFSETCL_OFFSET_FIELD                   _MK_FIELD_CONST(0xfff, HCFSETCL_OFFSET_SHIFT)
#define HCFSETCL_OFFSET_RANGE                   _MK_SHIFT_CONST(27):_MK_SHIFT_CONST(16)
#define HCFSETCL_OFFSET_ROW                     0

#define HCFSETCL_CLASSID_SHIFT                  _MK_SHIFT_CONST(6)
#define HCFSETCL_CLASSID_FIELD                  _MK_FIELD_CONST(0x3ff, HCFSETCL_CLASSID_SHIFT)
#define HCFSETCL_CLASSID_RANGE                  _MK_SHIFT_CONST(15):_MK_SHIFT_CONST(6)
#define HCFSETCL_CLASSID_ROW                    0

#define HCFSETCL_MASK_SHIFT                     _MK_SHIFT_CONST(0)
#define HCFSETCL_MASK_FIELD                     _MK_FIELD_CONST(0x3f, HCFSETCL_MASK_SHIFT)
#define HCFSETCL_MASK_RANGE                     _MK_SHIFT_CONST(5):_MK_SHIFT_CONST(0)
#define HCFSETCL_MASK_ROW                       0


// Packet HCFINCR
#define HCFINCR_SIZE 32

#define HCFINCR_OPCODE_SHIFT                    _MK_SHIFT_CONST(28)
#define HCFINCR_OPCODE_FIELD                    _MK_FIELD_CONST(0xf, HCFINCR_OPCODE_SHIFT)
#define HCFINCR_OPCODE_RANGE                    _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(28)
#define HCFINCR_OPCODE_ROW                      0
#define HCFINCR_OPCODE_INCR                     _MK_ENUM_CONST(1)

#define HCFINCR_OFFSET_SHIFT                    _MK_SHIFT_CONST(16)
#define HCFINCR_OFFSET_FIELD                    _MK_FIELD_CONST(0xfff, HCFINCR_OFFSET_SHIFT)
#define HCFINCR_OFFSET_RANGE                    _MK_SHIFT_CONST(27):_MK_SHIFT_CONST(16)
#define HCFINCR_OFFSET_ROW                      0

#define HCFINCR_COUNT_SHIFT                     _MK_SHIFT_CONST(0)
#define HCFINCR_COUNT_FIELD                     _MK_FIELD_CONST(0xffff, HCFINCR_COUNT_SHIFT)
#define HCFINCR_COUNT_RANGE                     _MK_SHIFT_CONST(15):_MK_SHIFT_CONST(0)
#define HCFINCR_COUNT_ROW                       0


// Packet HCFNONINCR
#define HCFNONINCR_SIZE 32

#define HCFNONINCR_OPCODE_SHIFT                 _MK_SHIFT_CONST(28)
#define HCFNONINCR_OPCODE_FIELD                 _MK_FIELD_CONST(0xf, HCFNONINCR_OPCODE_SHIFT)
#define HCFNONINCR_OPCODE_RANGE                 _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(28)
#define HCFNONINCR_OPCODE_ROW                   0
#define HCFNONINCR_OPCODE_NONINCR                       _MK_ENUM_CONST(2)

#define HCFNONINCR_OFFSET_SHIFT                 _MK_SHIFT_CONST(16)
#define HCFNONINCR_OFFSET_FIELD                 _MK_FIELD_CONST(0xfff, HCFNONINCR_OFFSET_SHIFT)
#define HCFNONINCR_OFFSET_RANGE                 _MK_SHIFT_CONST(27):_MK_SHIFT_CONST(16)
#define HCFNONINCR_OFFSET_ROW                   0

#define HCFNONINCR_COUNT_SHIFT                  _MK_SHIFT_CONST(0)
#define HCFNONINCR_COUNT_FIELD                  _MK_FIELD_CONST(0xffff, HCFNONINCR_COUNT_SHIFT)
#define HCFNONINCR_COUNT_RANGE                  _MK_SHIFT_CONST(15):_MK_SHIFT_CONST(0)
#define HCFNONINCR_COUNT_ROW                    0


// Packet HCFMASK
#define HCFMASK_SIZE 32

#define HCFMASK_OPCODE_SHIFT                    _MK_SHIFT_CONST(28)
#define HCFMASK_OPCODE_FIELD                    _MK_FIELD_CONST(0xf, HCFMASK_OPCODE_SHIFT)
#define HCFMASK_OPCODE_RANGE                    _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(28)
#define HCFMASK_OPCODE_ROW                      0
#define HCFMASK_OPCODE_MASK                     _MK_ENUM_CONST(3)

#define HCFMASK_OFFSET_SHIFT                    _MK_SHIFT_CONST(16)
#define HCFMASK_OFFSET_FIELD                    _MK_FIELD_CONST(0xfff, HCFMASK_OFFSET_SHIFT)
#define HCFMASK_OFFSET_RANGE                    _MK_SHIFT_CONST(27):_MK_SHIFT_CONST(16)
#define HCFMASK_OFFSET_ROW                      0

#define HCFMASK_MASK_SHIFT                      _MK_SHIFT_CONST(0)
#define HCFMASK_MASK_FIELD                      _MK_FIELD_CONST(0xffff, HCFMASK_MASK_SHIFT)
#define HCFMASK_MASK_RANGE                      _MK_SHIFT_CONST(15):_MK_SHIFT_CONST(0)
#define HCFMASK_MASK_ROW                        0


// Packet HCFIMM
#define HCFIMM_SIZE 32

#define HCFIMM_OPCODE_SHIFT                     _MK_SHIFT_CONST(28)
#define HCFIMM_OPCODE_FIELD                     _MK_FIELD_CONST(0xf, HCFIMM_OPCODE_SHIFT)
#define HCFIMM_OPCODE_RANGE                     _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(28)
#define HCFIMM_OPCODE_ROW                       0
#define HCFIMM_OPCODE_IMM                       _MK_ENUM_CONST(4)

#define HCFIMM_OFFSET_SHIFT                     _MK_SHIFT_CONST(16)
#define HCFIMM_OFFSET_FIELD                     _MK_FIELD_CONST(0xfff, HCFIMM_OFFSET_SHIFT)
#define HCFIMM_OFFSET_RANGE                     _MK_SHIFT_CONST(27):_MK_SHIFT_CONST(16)
#define HCFIMM_OFFSET_ROW                       0

#define HCFIMM_IMMDATA_SHIFT                    _MK_SHIFT_CONST(0)
#define HCFIMM_IMMDATA_FIELD                    _MK_FIELD_CONST(0xffff, HCFIMM_IMMDATA_SHIFT)
#define HCFIMM_IMMDATA_RANGE                    _MK_SHIFT_CONST(15):_MK_SHIFT_CONST(0)
#define HCFIMM_IMMDATA_ROW                      0


// Packet HCFRESTART
#define HCFRESTART_SIZE 32

#define HCFRESTART_OPCODE_SHIFT                 _MK_SHIFT_CONST(28)
#define HCFRESTART_OPCODE_FIELD                 _MK_FIELD_CONST(0xf, HCFRESTART_OPCODE_SHIFT)
#define HCFRESTART_OPCODE_RANGE                 _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(28)
#define HCFRESTART_OPCODE_ROW                   0
#define HCFRESTART_OPCODE_RESTART                       _MK_ENUM_CONST(5)

#define HCFRESTART_ADDRESS_SHIFT                        _MK_SHIFT_CONST(0)
#define HCFRESTART_ADDRESS_FIELD                        _MK_FIELD_CONST(0xfffffff, HCFRESTART_ADDRESS_SHIFT)
#define HCFRESTART_ADDRESS_RANGE                        _MK_SHIFT_CONST(27):_MK_SHIFT_CONST(0)
#define HCFRESTART_ADDRESS_ROW                  0


// Packet HCFGATHER
#define HCFGATHER_SIZE 32

#define HCFGATHER_OPCODE_SHIFT                  _MK_SHIFT_CONST(28)
#define HCFGATHER_OPCODE_FIELD                  _MK_FIELD_CONST(0xf, HCFGATHER_OPCODE_SHIFT)
#define HCFGATHER_OPCODE_RANGE                  _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(28)
#define HCFGATHER_OPCODE_ROW                    0
#define HCFGATHER_OPCODE_GATHER                 _MK_ENUM_CONST(6)

#define HCFGATHER_OFFSET_SHIFT                  _MK_SHIFT_CONST(16)
#define HCFGATHER_OFFSET_FIELD                  _MK_FIELD_CONST(0xfff, HCFGATHER_OFFSET_SHIFT)
#define HCFGATHER_OFFSET_RANGE                  _MK_SHIFT_CONST(27):_MK_SHIFT_CONST(16)
#define HCFGATHER_OFFSET_ROW                    0

#define HCFGATHER_INSERT_SHIFT                  _MK_SHIFT_CONST(15)
#define HCFGATHER_INSERT_FIELD                  _MK_FIELD_CONST(0x1, HCFGATHER_INSERT_SHIFT)
#define HCFGATHER_INSERT_RANGE                  _MK_SHIFT_CONST(15):_MK_SHIFT_CONST(15)
#define HCFGATHER_INSERT_ROW                    0
#define HCFGATHER_INSERT_DISABLE                        _MK_ENUM_CONST(0)
#define HCFGATHER_INSERT_ENABLE                 _MK_ENUM_CONST(1)

#define HCFGATHER_TYPE_SHIFT                    _MK_SHIFT_CONST(14)
#define HCFGATHER_TYPE_FIELD                    _MK_FIELD_CONST(0x1, HCFGATHER_TYPE_SHIFT)
#define HCFGATHER_TYPE_RANGE                    _MK_SHIFT_CONST(14):_MK_SHIFT_CONST(14)
#define HCFGATHER_TYPE_ROW                      0
#define HCFGATHER_TYPE_NONINCR                  _MK_ENUM_CONST(0)
#define HCFGATHER_TYPE_INCR                     _MK_ENUM_CONST(1)

#define HCFGATHER_COUNT_SHIFT                   _MK_SHIFT_CONST(0)
#define HCFGATHER_COUNT_FIELD                   _MK_FIELD_CONST(0x3fff, HCFGATHER_COUNT_SHIFT)
#define HCFGATHER_COUNT_RANGE                   _MK_SHIFT_CONST(13):_MK_SHIFT_CONST(0)
#define HCFGATHER_COUNT_ROW                     0

#define HCFGATHER_ADDRESS_SHIFT                 _MK_SHIFT_CONST(2)
#define HCFGATHER_ADDRESS_FIELD                 _MK_FIELD_CONST(0x3fffffff, HCFGATHER_ADDRESS_SHIFT)
#define HCFGATHER_ADDRESS_RANGE                 _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(2)
#define HCFGATHER_ADDRESS_ROW                   1


// Packet HCFCHDONE
#define HCFCHDONE_SIZE 32

#define HCFCHDONE_OPCODE_SHIFT                  _MK_SHIFT_CONST(28)
#define HCFCHDONE_OPCODE_FIELD                  _MK_FIELD_CONST(0xf, HCFCHDONE_OPCODE_SHIFT)
#define HCFCHDONE_OPCODE_RANGE                  _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(28)
#define HCFCHDONE_OPCODE_ROW                    0
#define HCFCHDONE_OPCODE_CHDONE                 _MK_ENUM_CONST(15)

#define HCFCHDONE_UNUSED_SHIFT                  _MK_SHIFT_CONST(0)
#define HCFCHDONE_UNUSED_FIELD                  _MK_FIELD_CONST(0xfffffff, HCFCHDONE_UNUSED_SHIFT)
#define HCFCHDONE_UNUSED_RANGE                  _MK_SHIFT_CONST(27):_MK_SHIFT_CONST(0)
#define HCFCHDONE_UNUSED_ROW                    0


// Packet HCFEXTEND
#define HCFEXTEND_SIZE 32

#define HCFEXTEND_OPCODE_SHIFT                  _MK_SHIFT_CONST(28)
#define HCFEXTEND_OPCODE_FIELD                  _MK_FIELD_CONST(0xf, HCFEXTEND_OPCODE_SHIFT)
#define HCFEXTEND_OPCODE_RANGE                  _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(28)
#define HCFEXTEND_OPCODE_ROW                    0
#define HCFEXTEND_OPCODE_EXTEND                 _MK_ENUM_CONST(14)

#define HCFEXTEND_SUBOP_SHIFT                   _MK_SHIFT_CONST(24)
#define HCFEXTEND_SUBOP_FIELD                   _MK_FIELD_CONST(0xf, HCFEXTEND_SUBOP_SHIFT)
#define HCFEXTEND_SUBOP_RANGE                   _MK_SHIFT_CONST(27):_MK_SHIFT_CONST(24)
#define HCFEXTEND_SUBOP_ROW                     0
#define HCFEXTEND_SUBOP_ACQUIRE_MLOCK                   _MK_ENUM_CONST(0)
#define HCFEXTEND_SUBOP_RELEASE_MLOCK                   _MK_ENUM_CONST(1)

#define HCFEXTEND_VALUE_SHIFT                   _MK_SHIFT_CONST(0)
#define HCFEXTEND_VALUE_FIELD                   _MK_FIELD_CONST(0xffffff, HCFEXTEND_VALUE_SHIFT)
#define HCFEXTEND_VALUE_RANGE                   _MK_SHIFT_CONST(23):_MK_SHIFT_CONST(0)
#define HCFEXTEND_VALUE_ROW                     0


// Packet HCFACQUIRE_MLOCK
#define HCFACQUIRE_MLOCK_SIZE 32

#define HCFACQUIRE_MLOCK_OPCODE_SHIFT                   _MK_SHIFT_CONST(28)
#define HCFACQUIRE_MLOCK_OPCODE_FIELD                   _MK_FIELD_CONST(0xf, HCFACQUIRE_MLOCK_OPCODE_SHIFT)
#define HCFACQUIRE_MLOCK_OPCODE_RANGE                   _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(28)
#define HCFACQUIRE_MLOCK_OPCODE_ROW                     0
#define HCFACQUIRE_MLOCK_OPCODE_EXTEND                  _MK_ENUM_CONST(14)

#define HCFACQUIRE_MLOCK_SUBOP_SHIFT                    _MK_SHIFT_CONST(24)
#define HCFACQUIRE_MLOCK_SUBOP_FIELD                    _MK_FIELD_CONST(0xf, HCFACQUIRE_MLOCK_SUBOP_SHIFT)
#define HCFACQUIRE_MLOCK_SUBOP_RANGE                    _MK_SHIFT_CONST(27):_MK_SHIFT_CONST(24)
#define HCFACQUIRE_MLOCK_SUBOP_ROW                      0
#define HCFACQUIRE_MLOCK_SUBOP_ACQUIRE_MLOCK                    _MK_ENUM_CONST(0)

#define HCFACQUIRE_MLOCK_INDX_SHIFT                     _MK_SHIFT_CONST(0)
#define HCFACQUIRE_MLOCK_INDX_FIELD                     _MK_FIELD_CONST(0x1ff, HCFACQUIRE_MLOCK_INDX_SHIFT)
#define HCFACQUIRE_MLOCK_INDX_RANGE                     _MK_SHIFT_CONST(8):_MK_SHIFT_CONST(0)
#define HCFACQUIRE_MLOCK_INDX_ROW                       0


// Packet HCFRELEASE_MLOCK
#define HCFRELEASE_MLOCK_SIZE 32

#define HCFRELEASE_MLOCK_OPCODE_SHIFT                   _MK_SHIFT_CONST(28)
#define HCFRELEASE_MLOCK_OPCODE_FIELD                   _MK_FIELD_CONST(0xf, HCFRELEASE_MLOCK_OPCODE_SHIFT)
#define HCFRELEASE_MLOCK_OPCODE_RANGE                   _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(28)
#define HCFRELEASE_MLOCK_OPCODE_ROW                     0
#define HCFRELEASE_MLOCK_OPCODE_EXTEND                  _MK_ENUM_CONST(14)

#define HCFRELEASE_MLOCK_SUBOP_SHIFT                    _MK_SHIFT_CONST(24)
#define HCFRELEASE_MLOCK_SUBOP_FIELD                    _MK_FIELD_CONST(0xf, HCFRELEASE_MLOCK_SUBOP_SHIFT)
#define HCFRELEASE_MLOCK_SUBOP_RANGE                    _MK_SHIFT_CONST(27):_MK_SHIFT_CONST(24)
#define HCFRELEASE_MLOCK_SUBOP_ROW                      0
#define HCFRELEASE_MLOCK_SUBOP_RELEASE_MLOCK                    _MK_ENUM_CONST(1)

#define HCFRELEASE_MLOCK_INDX_SHIFT                     _MK_SHIFT_CONST(0)
#define HCFRELEASE_MLOCK_INDX_FIELD                     _MK_FIELD_CONST(0x1ff, HCFRELEASE_MLOCK_INDX_SHIFT)
#define HCFRELEASE_MLOCK_INDX_RANGE                     _MK_SHIFT_CONST(8):_MK_SHIFT_CONST(0)
#define HCFRELEASE_MLOCK_INDX_ROW                       0


// Packet HOST_CLWR
#define HOST_CLWR_SIZE 55

#define HOST_CLWR_DATA_SHIFT                    _MK_SHIFT_CONST(0)
#define HOST_CLWR_DATA_FIELD                    _MK_FIELD_CONST(0xffffffff, HOST_CLWR_DATA_SHIFT)
#define HOST_CLWR_DATA_RANGE                    _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(0)
#define HOST_CLWR_DATA_ROW                      0

#define HOST_CLWR_OFFSET_SHIFT                  _MK_SHIFT_CONST(32)
#define HOST_CLWR_OFFSET_FIELD                  _MK_FIELD_CONST(0xffff, HOST_CLWR_OFFSET_SHIFT)
#define HOST_CLWR_OFFSET_RANGE                  _MK_SHIFT_CONST(47):_MK_SHIFT_CONST(32)
#define HOST_CLWR_OFFSET_ROW                    0

#define HOST_CLWR_BE_SHIFT                      _MK_SHIFT_CONST(48)
#define HOST_CLWR_BE_FIELD                      _MK_FIELD_CONST(0xf, HOST_CLWR_BE_SHIFT)
#define HOST_CLWR_BE_RANGE                      _MK_SHIFT_CONST(51):_MK_SHIFT_CONST(48)
#define HOST_CLWR_BE_ROW                        0

#define HOST_CLWR_RWN_SHIFT                     _MK_SHIFT_CONST(52)
#define HOST_CLWR_RWN_FIELD                     _MK_FIELD_CONST(0x1, HOST_CLWR_RWN_SHIFT)
#define HOST_CLWR_RWN_RANGE                     _MK_SHIFT_CONST(52):_MK_SHIFT_CONST(52)
#define HOST_CLWR_RWN_ROW                       0
#define HOST_CLWR_RWN_WRITE                     _MK_ENUM_CONST(0)
#define HOST_CLWR_RWN_READ                      _MK_ENUM_CONST(1)

#define HOST_CLWR_COR_SHIFT                     _MK_SHIFT_CONST(53)
#define HOST_CLWR_COR_FIELD                     _MK_FIELD_CONST(0x1, HOST_CLWR_COR_SHIFT)
#define HOST_CLWR_COR_RANGE                     _MK_SHIFT_CONST(53):_MK_SHIFT_CONST(53)
#define HOST_CLWR_COR_ROW                       0
#define HOST_CLWR_COR_CLASS                     _MK_ENUM_CONST(0)
#define HOST_CLWR_COR_REGISTER                  _MK_ENUM_CONST(1)

#define HOST_CLWR_CTXSW_SHIFT                   _MK_SHIFT_CONST(54)
#define HOST_CLWR_CTXSW_FIELD                   _MK_FIELD_CONST(0x1, HOST_CLWR_CTXSW_SHIFT)
#define HOST_CLWR_CTXSW_RANGE                   _MK_SHIFT_CONST(54):_MK_SHIFT_CONST(54)
#define HOST_CLWR_CTXSW_ROW                     0


// Packet HOST_CLWR_TYPE_CTXSW
#define HOST_CLWR_TYPE_CTXSW_SIZE 20

#define HOST_CLWR_TYPE_CTXSW_CLASS_SHIFT                        _MK_SHIFT_CONST(0)
#define HOST_CLWR_TYPE_CTXSW_CLASS_FIELD                        _MK_FIELD_CONST(0x3ff, HOST_CLWR_TYPE_CTXSW_CLASS_SHIFT)
#define HOST_CLWR_TYPE_CTXSW_CLASS_RANGE                        _MK_SHIFT_CONST(9):_MK_SHIFT_CONST(0)
#define HOST_CLWR_TYPE_CTXSW_CLASS_ROW                  0

#define HOST_CLWR_TYPE_CTXSW_RESVD_SHIFT                        _MK_SHIFT_CONST(11)
#define HOST_CLWR_TYPE_CTXSW_RESVD_FIELD                        _MK_FIELD_CONST(0x1f, HOST_CLWR_TYPE_CTXSW_RESVD_SHIFT)
#define HOST_CLWR_TYPE_CTXSW_RESVD_RANGE                        _MK_SHIFT_CONST(15):_MK_SHIFT_CONST(11)
#define HOST_CLWR_TYPE_CTXSW_RESVD_ROW                  0

#define HOST_CLWR_TYPE_CTXSW_CHANNEL_SHIFT                      _MK_SHIFT_CONST(16)
#define HOST_CLWR_TYPE_CTXSW_CHANNEL_FIELD                      _MK_FIELD_CONST(0xf, HOST_CLWR_TYPE_CTXSW_CHANNEL_SHIFT)
#define HOST_CLWR_TYPE_CTXSW_CHANNEL_RANGE                      _MK_SHIFT_CONST(19):_MK_SHIFT_CONST(16)
#define HOST_CLWR_TYPE_CTXSW_CHANNEL_ROW                        0
#define HOST_CLWR_TYPE_CTXSW_CHANNEL_CH0                        _MK_ENUM_CONST(0)
#define HOST_CLWR_TYPE_CTXSW_CHANNEL_CH1                        _MK_ENUM_CONST(1)
#define HOST_CLWR_TYPE_CTXSW_CHANNEL_CH2                        _MK_ENUM_CONST(2)
#define HOST_CLWR_TYPE_CTXSW_CHANNEL_CH3                        _MK_ENUM_CONST(3)
#define HOST_CLWR_TYPE_CTXSW_CHANNEL_CH4                        _MK_ENUM_CONST(4)
#define HOST_CLWR_TYPE_CTXSW_CHANNEL_CH5                        _MK_ENUM_CONST(5)
#define HOST_CLWR_TYPE_CTXSW_CHANNEL_CH6                        _MK_ENUM_CONST(6)
#define HOST_CLWR_TYPE_CTXSW_CHANNEL_CH7                        _MK_ENUM_CONST(7)
#define HOST_CLWR_TYPE_CTXSW_CHANNEL_CHPROT                     _MK_ENUM_CONST(8)
#define HOST_CLWR_TYPE_CTXSW_CHANNEL_CHINV                      _MK_ENUM_CONST(15)


// Packet HOST_CLWR_TYPE_REGRD
#define HOST_CLWR_TYPE_REGRD_SIZE 20

#define HOST_CLWR_TYPE_REGRD_RESVD_SHIFT                        _MK_SHIFT_CONST(0)
#define HOST_CLWR_TYPE_REGRD_RESVD_FIELD                        _MK_FIELD_CONST(0xffff, HOST_CLWR_TYPE_REGRD_RESVD_SHIFT)
#define HOST_CLWR_TYPE_REGRD_RESVD_RANGE                        _MK_SHIFT_CONST(15):_MK_SHIFT_CONST(0)
#define HOST_CLWR_TYPE_REGRD_RESVD_ROW                  0

#define HOST_CLWR_TYPE_REGRD_CHANNEL_SHIFT                      _MK_SHIFT_CONST(16)
#define HOST_CLWR_TYPE_REGRD_CHANNEL_FIELD                      _MK_FIELD_CONST(0xf, HOST_CLWR_TYPE_REGRD_CHANNEL_SHIFT)
#define HOST_CLWR_TYPE_REGRD_CHANNEL_RANGE                      _MK_SHIFT_CONST(19):_MK_SHIFT_CONST(16)
#define HOST_CLWR_TYPE_REGRD_CHANNEL_ROW                        0
#define HOST_CLWR_TYPE_REGRD_CHANNEL_CH0                        _MK_ENUM_CONST(0)
#define HOST_CLWR_TYPE_REGRD_CHANNEL_CH1                        _MK_ENUM_CONST(1)
#define HOST_CLWR_TYPE_REGRD_CHANNEL_CH2                        _MK_ENUM_CONST(2)
#define HOST_CLWR_TYPE_REGRD_CHANNEL_CH3                        _MK_ENUM_CONST(3)
#define HOST_CLWR_TYPE_REGRD_CHANNEL_CH4                        _MK_ENUM_CONST(4)
#define HOST_CLWR_TYPE_REGRD_CHANNEL_CH5                        _MK_ENUM_CONST(5)
#define HOST_CLWR_TYPE_REGRD_CHANNEL_CH6                        _MK_ENUM_CONST(6)
#define HOST_CLWR_TYPE_REGRD_CHANNEL_CH7                        _MK_ENUM_CONST(7)
#define HOST_CLWR_TYPE_REGRD_CHANNEL_CHPROT                     _MK_ENUM_CONST(8)
#define HOST_CLWR_TYPE_REGRD_CHANNEL_CHINV                      _MK_ENUM_CONST(15)


// Packet HOST_CLRD
#define HOST_CLRD_SIZE 39

#define HOST_CLRD_DATA_SHIFT                    _MK_SHIFT_CONST(0)
#define HOST_CLRD_DATA_FIELD                    _MK_FIELD_CONST(0xffffffff, HOST_CLRD_DATA_SHIFT)
#define HOST_CLRD_DATA_RANGE                    _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(0)
#define HOST_CLRD_DATA_ROW                      0

#define HOST_CLRD_CHANNEL_SHIFT                 _MK_SHIFT_CONST(32)
#define HOST_CLRD_CHANNEL_FIELD                 _MK_FIELD_CONST(0xf, HOST_CLRD_CHANNEL_SHIFT)
#define HOST_CLRD_CHANNEL_RANGE                 _MK_SHIFT_CONST(35):_MK_SHIFT_CONST(32)
#define HOST_CLRD_CHANNEL_ROW                   0
#define HOST_CLRD_CHANNEL_CH0                   _MK_ENUM_CONST(0)
#define HOST_CLRD_CHANNEL_CH1                   _MK_ENUM_CONST(1)
#define HOST_CLRD_CHANNEL_CH2                   _MK_ENUM_CONST(2)
#define HOST_CLRD_CHANNEL_CH3                   _MK_ENUM_CONST(3)
#define HOST_CLRD_CHANNEL_CH4                   _MK_ENUM_CONST(4)
#define HOST_CLRD_CHANNEL_CH5                   _MK_ENUM_CONST(5)
#define HOST_CLRD_CHANNEL_CH6                   _MK_ENUM_CONST(6)
#define HOST_CLRD_CHANNEL_CH7                   _MK_ENUM_CONST(7)
#define HOST_CLRD_CHANNEL_CHPROT                        _MK_ENUM_CONST(8)
#define HOST_CLRD_CHANNEL_CHINV                 _MK_ENUM_CONST(15)

#define HOST_CLRD_TYPE_SHIFT                    _MK_SHIFT_CONST(36)
#define HOST_CLRD_TYPE_FIELD                    _MK_FIELD_CONST(0x3, HOST_CLRD_TYPE_SHIFT)
#define HOST_CLRD_TYPE_RANGE                    _MK_SHIFT_CONST(37):_MK_SHIFT_CONST(36)
#define HOST_CLRD_TYPE_ROW                      0
#define HOST_CLRD_TYPE_REGISTER                 _MK_ENUM_CONST(0)
#define HOST_CLRD_TYPE_RAISE                    _MK_ENUM_CONST(1)
#define HOST_CLRD_TYPE_SYNCPT                   _MK_ENUM_CONST(2)
#define HOST_CLRD_TYPE_CTXSW_ACK                        _MK_ENUM_CONST(3)

#define HOST_CLRD_INTR_SHIFT                    _MK_SHIFT_CONST(38)
#define HOST_CLRD_INTR_FIELD                    _MK_FIELD_CONST(0x1, HOST_CLRD_INTR_SHIFT)
#define HOST_CLRD_INTR_RANGE                    _MK_SHIFT_CONST(38):_MK_SHIFT_CONST(38)
#define HOST_CLRD_INTR_ROW                      0
#define HOST_CLRD_INTR_CLEAR                    _MK_ENUM_CONST(0)
#define HOST_CLRD_INTR_SET                      _MK_ENUM_CONST(1)


// Packet HOST_CLRD_TYPE_RAISE
#define HOST_CLRD_TYPE_RAISE_SIZE 5

#define HOST_CLRD_TYPE_RAISE_VALUE_SHIFT                        _MK_SHIFT_CONST(0)
#define HOST_CLRD_TYPE_RAISE_VALUE_FIELD                        _MK_FIELD_CONST(0x1f, HOST_CLRD_TYPE_RAISE_VALUE_SHIFT)
#define HOST_CLRD_TYPE_RAISE_VALUE_RANGE                        _MK_SHIFT_CONST(4):_MK_SHIFT_CONST(0)
#define HOST_CLRD_TYPE_RAISE_VALUE_ROW                  0


// Packet HOST_CLRD_TYPE_SYNCPT
#define HOST_CLRD_TYPE_SYNCPT_SIZE 8

#define HOST_CLRD_TYPE_SYNCPT_INDX_SHIFT                        _MK_SHIFT_CONST(0)
#define HOST_CLRD_TYPE_SYNCPT_INDX_FIELD                        _MK_FIELD_CONST(0xff, HOST_CLRD_TYPE_SYNCPT_INDX_SHIFT)
#define HOST_CLRD_TYPE_SYNCPT_INDX_RANGE                        _MK_SHIFT_CONST(7):_MK_SHIFT_CONST(0)
#define HOST_CLRD_TYPE_SYNCPT_INDX_ROW                  0


// Packet HOST_CLWR_TYPE_SYNCPT
#define HOST_CLWR_TYPE_SYNCPT_SIZE 16

#define HOST_CLWR_TYPE_SYNCPT_COND_SHIFT                        _MK_SHIFT_CONST(8)
#define HOST_CLWR_TYPE_SYNCPT_COND_FIELD                        _MK_FIELD_CONST(0xff, HOST_CLWR_TYPE_SYNCPT_COND_SHIFT)
#define HOST_CLWR_TYPE_SYNCPT_COND_RANGE                        _MK_SHIFT_CONST(15):_MK_SHIFT_CONST(8)
#define HOST_CLWR_TYPE_SYNCPT_COND_ROW                  0

#define HOST_CLWR_TYPE_SYNCPT_INDX_SHIFT                        _MK_SHIFT_CONST(0)
#define HOST_CLWR_TYPE_SYNCPT_INDX_FIELD                        _MK_FIELD_CONST(0xff, HOST_CLWR_TYPE_SYNCPT_INDX_SHIFT)
#define HOST_CLWR_TYPE_SYNCPT_INDX_RANGE                        _MK_SHIFT_CONST(7):_MK_SHIFT_CONST(0)
#define HOST_CLWR_TYPE_SYNCPT_INDX_ROW                  0


// Packet WRITE_BUFFER_HEADER
#define WRITE_BUFFER_HEADER_SIZE 32

#define WRITE_BUFFER_HEADER_BUFFER_SIZE_SHIFT                   _MK_SHIFT_CONST(0)
#define WRITE_BUFFER_HEADER_BUFFER_SIZE_FIELD                   _MK_FIELD_CONST(0xffff, WRITE_BUFFER_HEADER_BUFFER_SIZE_SHIFT)
#define WRITE_BUFFER_HEADER_BUFFER_SIZE_RANGE                   _MK_SHIFT_CONST(15):_MK_SHIFT_CONST(0)
#define WRITE_BUFFER_HEADER_BUFFER_SIZE_ROW                     0

#define WRITE_BUFFER_HEADER_RAISE_EN_SHIFT                      _MK_SHIFT_CONST(16)
#define WRITE_BUFFER_HEADER_RAISE_EN_FIELD                      _MK_FIELD_CONST(0x1, WRITE_BUFFER_HEADER_RAISE_EN_SHIFT)
#define WRITE_BUFFER_HEADER_RAISE_EN_RANGE                      _MK_SHIFT_CONST(16):_MK_SHIFT_CONST(16)
#define WRITE_BUFFER_HEADER_RAISE_EN_ROW                        0

#define WRITE_BUFFER_HEADER_RAISE_SHIFT                 _MK_SHIFT_CONST(17)
#define WRITE_BUFFER_HEADER_RAISE_FIELD                 _MK_FIELD_CONST(0x1f, WRITE_BUFFER_HEADER_RAISE_SHIFT)
#define WRITE_BUFFER_HEADER_RAISE_RANGE                 _MK_SHIFT_CONST(21):_MK_SHIFT_CONST(17)
#define WRITE_BUFFER_HEADER_RAISE_ROW                   0

#define WRITE_BUFFER_HEADER_CHANNEL_SHIFT                       _MK_SHIFT_CONST(22)
#define WRITE_BUFFER_HEADER_CHANNEL_FIELD                       _MK_FIELD_CONST(0xf, WRITE_BUFFER_HEADER_CHANNEL_SHIFT)
#define WRITE_BUFFER_HEADER_CHANNEL_RANGE                       _MK_SHIFT_CONST(25):_MK_SHIFT_CONST(22)
#define WRITE_BUFFER_HEADER_CHANNEL_ROW                 0

#define WRITE_BUFFER_HEADER_FRAME_START_SHIFT                   _MK_SHIFT_CONST(26)
#define WRITE_BUFFER_HEADER_FRAME_START_FIELD                   _MK_FIELD_CONST(0x1, WRITE_BUFFER_HEADER_FRAME_START_SHIFT)
#define WRITE_BUFFER_HEADER_FRAME_START_RANGE                   _MK_SHIFT_CONST(26):_MK_SHIFT_CONST(26)
#define WRITE_BUFFER_HEADER_FRAME_START_ROW                     0

#define WRITE_BUFFER_HEADER_FRAME_END_SHIFT                     _MK_SHIFT_CONST(27)
#define WRITE_BUFFER_HEADER_FRAME_END_FIELD                     _MK_FIELD_CONST(0x1, WRITE_BUFFER_HEADER_FRAME_END_SHIFT)
#define WRITE_BUFFER_HEADER_FRAME_END_RANGE                     _MK_SHIFT_CONST(27):_MK_SHIFT_CONST(27)
#define WRITE_BUFFER_HEADER_FRAME_END_ROW                       0

#define WRITE_BUFFER_HEADER_LARGE_HDR_SHIFT                     _MK_SHIFT_CONST(28)
#define WRITE_BUFFER_HEADER_LARGE_HDR_FIELD                     _MK_FIELD_CONST(0x1, WRITE_BUFFER_HEADER_LARGE_HDR_SHIFT)
#define WRITE_BUFFER_HEADER_LARGE_HDR_RANGE                     _MK_SHIFT_CONST(28):_MK_SHIFT_CONST(28)
#define WRITE_BUFFER_HEADER_LARGE_HDR_ROW                       0

#define WRITE_BUFFER_HEADER_RESERVED_SHIFT                      _MK_SHIFT_CONST(29)
#define WRITE_BUFFER_HEADER_RESERVED_FIELD                      _MK_FIELD_CONST(0x7, WRITE_BUFFER_HEADER_RESERVED_SHIFT)
#define WRITE_BUFFER_HEADER_RESERVED_RANGE                      _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(29)
#define WRITE_BUFFER_HEADER_RESERVED_ROW                        0


// Packet DMA_REQ_IF
#define DMA_REQ_IF_SIZE 3

#define DMA_REQ_IF_BUFFER_RDY_SHIFT                     _MK_SHIFT_CONST(0)
#define DMA_REQ_IF_BUFFER_RDY_FIELD                     _MK_FIELD_CONST(0x1, DMA_REQ_IF_BUFFER_RDY_SHIFT)
#define DMA_REQ_IF_BUFFER_RDY_RANGE                     _MK_SHIFT_CONST(0):_MK_SHIFT_CONST(0)
#define DMA_REQ_IF_BUFFER_RDY_ROW                       0

#define DMA_REQ_IF_BUFFER_INIT_SHIFT                    _MK_SHIFT_CONST(1)
#define DMA_REQ_IF_BUFFER_INIT_FIELD                    _MK_FIELD_CONST(0x1, DMA_REQ_IF_BUFFER_INIT_SHIFT)
#define DMA_REQ_IF_BUFFER_INIT_RANGE                    _MK_SHIFT_CONST(1):_MK_SHIFT_CONST(1)
#define DMA_REQ_IF_BUFFER_INIT_ROW                      0

#define DMA_REQ_IF_LAST_BUFFER_SHIFT                    _MK_SHIFT_CONST(2)
#define DMA_REQ_IF_LAST_BUFFER_FIELD                    _MK_FIELD_CONST(0x1, DMA_REQ_IF_LAST_BUFFER_SHIFT)
#define DMA_REQ_IF_LAST_BUFFER_RANGE                    _MK_SHIFT_CONST(2):_MK_SHIFT_CONST(2)
#define DMA_REQ_IF_LAST_BUFFER_ROW                      0


// Packet IF2HOST_PKT
#define IF2HOST_PKT_SIZE 77

#define IF2HOST_PKT_DATA_SHIFT                  _MK_SHIFT_CONST(0)
#define IF2HOST_PKT_DATA_FIELD                  _MK_FIELD_CONST(0xffffffff, IF2HOST_PKT_DATA_SHIFT)
#define IF2HOST_PKT_DATA_RANGE                  _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(0)
#define IF2HOST_PKT_DATA_ROW                    0

#define IF2HOST_PKT_ADDR_SHIFT                  _MK_SHIFT_CONST(32)
#define IF2HOST_PKT_ADDR_FIELD                  _MK_FIELD_CONST(0xffffffff, IF2HOST_PKT_ADDR_SHIFT)
#define IF2HOST_PKT_ADDR_RANGE                  _MK_SHIFT_CONST(63):_MK_SHIFT_CONST(32)
#define IF2HOST_PKT_ADDR_ROW                    0

#define IF2HOST_PKT_RST_n_SHIFT                 _MK_SHIFT_CONST(64)
#define IF2HOST_PKT_RST_n_FIELD                 _MK_FIELD_CONST(0x1, IF2HOST_PKT_RST_n_SHIFT)
#define IF2HOST_PKT_RST_n_RANGE                 _MK_SHIFT_CONST(64):_MK_SHIFT_CONST(64)
#define IF2HOST_PKT_RST_n_ROW                   0

#define IF2HOST_PKT_CS_n_SHIFT                  _MK_SHIFT_CONST(65)
#define IF2HOST_PKT_CS_n_FIELD                  _MK_FIELD_CONST(0x1, IF2HOST_PKT_CS_n_SHIFT)
#define IF2HOST_PKT_CS_n_RANGE                  _MK_SHIFT_CONST(65):_MK_SHIFT_CONST(65)
#define IF2HOST_PKT_CS_n_ROW                    0

#define IF2HOST_PKT_RD_n_SHIFT                  _MK_SHIFT_CONST(66)
#define IF2HOST_PKT_RD_n_FIELD                  _MK_FIELD_CONST(0x1, IF2HOST_PKT_RD_n_SHIFT)
#define IF2HOST_PKT_RD_n_RANGE                  _MK_SHIFT_CONST(66):_MK_SHIFT_CONST(66)
#define IF2HOST_PKT_RD_n_ROW                    0

#define IF2HOST_PKT_WR_n_SHIFT                  _MK_SHIFT_CONST(67)
#define IF2HOST_PKT_WR_n_FIELD                  _MK_FIELD_CONST(0x1, IF2HOST_PKT_WR_n_SHIFT)
#define IF2HOST_PKT_WR_n_RANGE                  _MK_SHIFT_CONST(67):_MK_SHIFT_CONST(67)
#define IF2HOST_PKT_WR_n_ROW                    0

#define IF2HOST_PKT_BE_n_SHIFT                  _MK_SHIFT_CONST(68)
#define IF2HOST_PKT_BE_n_FIELD                  _MK_FIELD_CONST(0xf, IF2HOST_PKT_BE_n_SHIFT)
#define IF2HOST_PKT_BE_n_RANGE                  _MK_SHIFT_CONST(71):_MK_SHIFT_CONST(68)
#define IF2HOST_PKT_BE_n_ROW                    0

#define IF2HOST_PKT_HGP4_RDY_SHIFT                      _MK_SHIFT_CONST(72)
#define IF2HOST_PKT_HGP4_RDY_FIELD                      _MK_FIELD_CONST(0x1, IF2HOST_PKT_HGP4_RDY_SHIFT)
#define IF2HOST_PKT_HGP4_RDY_RANGE                      _MK_SHIFT_CONST(72):_MK_SHIFT_CONST(72)
#define IF2HOST_PKT_HGP4_RDY_ROW                        0

#define IF2HOST_PKT_CS1_n_SHIFT                 _MK_SHIFT_CONST(68)
#define IF2HOST_PKT_CS1_n_FIELD                 _MK_FIELD_CONST(0x1, IF2HOST_PKT_CS1_n_SHIFT)
#define IF2HOST_PKT_CS1_n_RANGE                 _MK_SHIFT_CONST(68):_MK_SHIFT_CONST(68)
#define IF2HOST_PKT_CS1_n_ROW                   0

#define IF2HOST_PKT_BURST_SHIFT                 _MK_SHIFT_CONST(69)
#define IF2HOST_PKT_BURST_FIELD                 _MK_FIELD_CONST(0xff, IF2HOST_PKT_BURST_SHIFT)
#define IF2HOST_PKT_BURST_RANGE                 _MK_SHIFT_CONST(76):_MK_SHIFT_CONST(69)
#define IF2HOST_PKT_BURST_ROW                   0


// Packet HOST2IF_PKT
#define HOST2IF_PKT_SIZE 32

#define HOST2IF_PKT_DATA_SHIFT                  _MK_SHIFT_CONST(0)
#define HOST2IF_PKT_DATA_FIELD                  _MK_FIELD_CONST(0xffffffff, HOST2IF_PKT_DATA_SHIFT)
#define HOST2IF_PKT_DATA_RANGE                  _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(0)
#define HOST2IF_PKT_DATA_ROW                    0


// Packet HOST_FIFO_WRITE
#define HOST_FIFO_WRITE_SIZE 32

#define HOST_FIFO_WRITE_DATA_SHIFT                      _MK_SHIFT_CONST(0)
#define HOST_FIFO_WRITE_DATA_FIELD                      _MK_FIELD_CONST(0xffffffff, HOST_FIFO_WRITE_DATA_SHIFT)
#define HOST_FIFO_WRITE_DATA_RANGE                      _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(0)
#define HOST_FIFO_WRITE_DATA_ROW                        0


// Packet IP_REQ_PKT
#define IP_REQ_PKT_SIZE 36

#define IP_REQ_PKT_ADDR_SHIFT                   _MK_SHIFT_CONST(0)
#define IP_REQ_PKT_ADDR_FIELD                   _MK_FIELD_CONST(0xffffffff, IP_REQ_PKT_ADDR_SHIFT)
#define IP_REQ_PKT_ADDR_RANGE                   _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(0)
#define IP_REQ_PKT_ADDR_ROW                     0

#define IP_REQ_PKT_XFER_SIZE_SHIFT                      _MK_SHIFT_CONST(32)
#define IP_REQ_PKT_XFER_SIZE_FIELD                      _MK_FIELD_CONST(0x7, IP_REQ_PKT_XFER_SIZE_SHIFT)
#define IP_REQ_PKT_XFER_SIZE_RANGE                      _MK_SHIFT_CONST(34):_MK_SHIFT_CONST(32)
#define IP_REQ_PKT_XFER_SIZE_ROW                        0

#define IP_REQ_PKT_WRITE_SHIFT                  _MK_SHIFT_CONST(35)
#define IP_REQ_PKT_WRITE_FIELD                  _MK_FIELD_CONST(0x1, IP_REQ_PKT_WRITE_SHIFT)
#define IP_REQ_PKT_WRITE_RANGE                  _MK_SHIFT_CONST(35):_MK_SHIFT_CONST(35)
#define IP_REQ_PKT_WRITE_ROW                    0


// Packet IP_WDATA_PKT
#define IP_WDATA_PKT_SIZE 32

#define IP_WDATA_PKT_WDATA_SHIFT                        _MK_SHIFT_CONST(0)
#define IP_WDATA_PKT_WDATA_FIELD                        _MK_FIELD_CONST(0xffffffff, IP_WDATA_PKT_WDATA_SHIFT)
#define IP_WDATA_PKT_WDATA_RANGE                        _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(0)
#define IP_WDATA_PKT_WDATA_ROW                  0


// Packet IP_RDATA_PKT
#define IP_RDATA_PKT_SIZE 32

#define IP_RDATA_PKT_RDATA_SHIFT                        _MK_SHIFT_CONST(0)
#define IP_RDATA_PKT_RDATA_FIELD                        _MK_FIELD_CONST(0xffffffff, IP_RDATA_PKT_RDATA_SHIFT)
#define IP_RDATA_PKT_RDATA_RANGE                        _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(0)
#define IP_RDATA_PKT_RDATA_ROW                  0


// Packet PPSB_PKT
#define PPSB_PKT_SIZE 100

#define PPSB_PKT_PADDR_SHIFT                    _MK_SHIFT_CONST(0)
#define PPSB_PKT_PADDR_FIELD                    _MK_FIELD_CONST(0xffffffff, PPSB_PKT_PADDR_SHIFT)
#define PPSB_PKT_PADDR_RANGE                    _MK_SHIFT_CONST(31):_MK_SHIFT_CONST(0)
#define PPSB_PKT_PADDR_ROW                      0

#define PPSB_PKT_PWDATA_SHIFT                   _MK_SHIFT_CONST(32)
#define PPSB_PKT_PWDATA_FIELD                   _MK_FIELD_CONST(0xffffffff, PPSB_PKT_PWDATA_SHIFT)
#define PPSB_PKT_PWDATA_RANGE                   _MK_SHIFT_CONST(63):_MK_SHIFT_CONST(32)
#define PPSB_PKT_PWDATA_ROW                     0

#define PPSB_PKT_PRDATA_SHIFT                   _MK_SHIFT_CONST(64)
#define PPSB_PKT_PRDATA_FIELD                   _MK_FIELD_CONST(0xffffffff, PPSB_PKT_PRDATA_SHIFT)
#define PPSB_PKT_PRDATA_RANGE                   _MK_SHIFT_CONST(95):_MK_SHIFT_CONST(64)
#define PPSB_PKT_PRDATA_ROW                     0

#define PPSB_PKT_PENABLE_SHIFT                  _MK_SHIFT_CONST(96)
#define PPSB_PKT_PENABLE_FIELD                  _MK_FIELD_CONST(0x1, PPSB_PKT_PENABLE_SHIFT)
#define PPSB_PKT_PENABLE_RANGE                  _MK_SHIFT_CONST(96):_MK_SHIFT_CONST(96)
#define PPSB_PKT_PENABLE_ROW                    0

#define PPSB_PKT_PSEL_SHIFT                     _MK_SHIFT_CONST(97)
#define PPSB_PKT_PSEL_FIELD                     _MK_FIELD_CONST(0x1, PPSB_PKT_PSEL_SHIFT)
#define PPSB_PKT_PSEL_RANGE                     _MK_SHIFT_CONST(97):_MK_SHIFT_CONST(97)
#define PPSB_PKT_PSEL_ROW                       0

#define PPSB_PKT_PWRITE_SHIFT                   _MK_SHIFT_CONST(98)
#define PPSB_PKT_PWRITE_FIELD                   _MK_FIELD_CONST(0x1, PPSB_PKT_PWRITE_SHIFT)
#define PPSB_PKT_PWRITE_RANGE                   _MK_SHIFT_CONST(98):_MK_SHIFT_CONST(98)
#define PPSB_PKT_PWRITE_ROW                     0

#define PPSB_PKT_PREADY_SHIFT                   _MK_SHIFT_CONST(99)
#define PPSB_PKT_PREADY_FIELD                   _MK_FIELD_CONST(0x1, PPSB_PKT_PREADY_SHIFT)
#define PPSB_PKT_PREADY_RANGE                   _MK_SHIFT_CONST(99):_MK_SHIFT_CONST(99)
#define PPSB_PKT_PREADY_ROW                     0


//
// ADDRESS SPACES
//


//
// ARHOST1X REGISTER BANKS
//


// To satisfy various compilers and platforms,
// we let users control the types and syntax of certain constants, using macros.
#ifndef _MK_SHIFT_CONST
  #define _MK_SHIFT_CONST(_constant_) _constant_
#endif
#ifndef _MK_MASK_CONST
  #define _MK_MASK_CONST(_constant_) _constant_
#endif
#ifndef _MK_ENUM_CONST
  #define _MK_ENUM_CONST(_constant_) (_constant_ ## UL)
#endif
#ifndef _MK_ADDR_CONST
  #define _MK_ADDR_CONST(_constant_) _constant_
#endif
#ifndef _MK_FIELD_CONST
  #define _MK_FIELD_CONST(_mask_, _shift_) (_MK_MASK_CONST(_mask_) << _MK_SHIFT_CONST(_shift_))
#endif

#ifdef __cplusplus
}
#endif

#endif // ifndef ___ARHOST1X_H_INC_
